{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  _s();\n  const playerColor = props.playerColor;\n  const boardViewRef = useRef(null);\n  const [activePiece, setActivePiece] = useState(null);\n  const [grabPiecePos, setGrabPiecePos] = useState(null);\n  const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n  const boardView = [[], [], [], [], [], [], [], []];\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    for (let j = 0; j < BOARD_SIZE; j++) {\n      boardView[i].push( /*#__PURE__*/_jsxDEV(Square, {\n        squareModel: boardModel[i][j]\n      }, i + \"\" + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  function handleClick(event) {\n    if (activePiece) {\n      movePiece(event);\n    } else {\n      selectPiece(event);\n    }\n  }\n  function selectPiece(event) {\n    const element = event.target;\n    const currentBoard = boardViewRef.current;\n    if (element.classList.contains(\"piece\") && currentBoard) {\n      setActivePiece(element);\n    }\n  }\n  function movePiece(event) {\n    const element = event.target;\n    console.log(element);\n    if (activePiece && boardViewRef.current) {\n      let startSquare = activePiece.parentElement;\n      let endSquare = element;\n      if (element.classList.contains(\"piece\")) {\n        endSquare = endSquare.parentElement;\n      }\n      if (startSquare && endSquare) {\n        endSquare.innerHTML = '';\n        startSquare.removeChild(activePiece);\n        endSquare.appendChild(activePiece);\n      }\n      setActivePiece(null);\n    }\n  }\n  // function grabPiece(event: React.MouseEvent){\n  //     const element = event.target as HTMLElement;\n  //     const currentBoard = boardViewRef.current;\n  //     setGrabPiecePos(element.parentElement?.id+\"\");\n  //     console.log(element.parentElement?.id);\n  //     if(element.classList.contains(\"piece\") && currentBoard){\n  //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n  //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientWidth;\n  //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n  //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n  //         element.style.position = \"absolute\";\n  //         element.style.left = `${x}px`;\n  //         element.style.top = `${y}px`;\n  //         setActivePiece(element);\n  //     }\n  // }\n\n  // function movePiece(event: React.MouseEvent){\n  //     if(activePiece && boardViewRef.current){\n  //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n  //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientHeight;\n  //         const minX = boardViewRef.current.offsetLeft;\n  //         const minY = boardViewRef.current.offsetTop;\n  //         const maxX = boardViewRef.current.offsetLeft + ((8/9)*BOARD_VIEW_WIDTH);\n  //         const maxY = boardViewRef.current.offsetTop + ((8/9)*BOARD_VIEW_HEIGHT);\n\n  //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n  //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n\n  //         if (x < minX) {\n  //             activePiece.style.left = `${minX}px`;\n  //         }\n  //         else if (x > maxX) {\n  //             activePiece.style.left = `${maxX}px`;\n  //         }\n  //         else {\n  //             activePiece.style.left = `${x}px`;\n  //         }\n\n  //         if (y < minY) {\n  //             activePiece.style.top = `${minY}px`;\n  //         }\n  //         else if (y > maxY) {\n  //             activePiece.style.top = `${maxY}px`;\n  //         }\n  //         else {\n  //             activePiece.style.top = `${y}px`;\n  //         }\n  //     }\n  // }\n\n  // function dropPiece(event: React.MouseEvent){\n  //     const element = event.target as HTMLElement;\n  //     console.log(event);\n  //     if(activePiece && boardViewRef.current){\n  //         setActivePiece(null);\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    onClick: event => handleClick(event),\n    ref: boardViewRef,\n    children: boardView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(Chessboard, \"bcMENRtHT3nIWkSYW+d4LtPqixM=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","ChessBoardModel","useRef","useState","BOARD_SIZE","React","jsxDEV","_jsxDEV","Chessboard","props","_s","playerColor","boardViewRef","activePiece","setActivePiece","grabPiecePos","setGrabPiecePos","boardModel","genChessBoard","boardView","i","j","push","squareModel","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","event","movePiece","selectPiece","element","target","currentBoard","current","classList","contains","console","log","startSquare","parentElement","endSquare","innerHTML","removeChild","appendChild","id","onClick","ref","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\nimport React from 'react';\nexport default function Chessboard(props:{playerColor:string}){\n    const playerColor = props.playerColor;\n    const boardViewRef = useRef<HTMLDivElement>(null);\n    const [activePiece, setActivePiece] = useState< HTMLElement | null>(null);\n    const [grabPiecePos, setGrabPiecePos] = useState<string | null>(null)\n    const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n    const boardView:any = [[],[],[],[],[],[],[],[]];\n\n    for(let i = 0; i<BOARD_SIZE; i++){\n        for(let j = 0; j<BOARD_SIZE; j++){\n            boardView[i].push(\n                <Square key={i+\"\"+j} squareModel={boardModel[i][j]}></Square>\n            );\n        }\n    }\n    function handleClick(event: React.MouseEvent){\n        if(activePiece){\n            movePiece(event);\n        }\n        else{\n            selectPiece(event);\n        }\n    }\n    function selectPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        const currentBoard = boardViewRef.current;\n        if(element.classList.contains(\"piece\") && currentBoard){\n            \n            setActivePiece(element); \n        }       \n    }\n    function movePiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        console.log(element);\n        if(activePiece && boardViewRef.current){\n            let startSquare = activePiece.parentElement;\n            let endSquare: HTMLElement | null = element;\n            \n            if(element.classList.contains(\"piece\")){\n                endSquare = endSquare.parentElement;\n            }\n            if(startSquare && endSquare){\n                endSquare.innerHTML = '';\n                startSquare.removeChild(activePiece);\n                endSquare.appendChild(activePiece);\n            }\n            setActivePiece(null);\n        }\n    }\n    // function grabPiece(event: React.MouseEvent){\n    //     const element = event.target as HTMLElement;\n    //     const currentBoard = boardViewRef.current;\n    //     setGrabPiecePos(element.parentElement?.id+\"\");\n    //     console.log(element.parentElement?.id);\n    //     if(element.classList.contains(\"piece\") && currentBoard){\n    //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n    //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientWidth;\n    //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n    //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n    //         element.style.position = \"absolute\";\n    //         element.style.left = `${x}px`;\n    //         element.style.top = `${y}px`;\n    //         setActivePiece(element);\n    //     }\n    // }\n    \n    // function movePiece(event: React.MouseEvent){\n    //     if(activePiece && boardViewRef.current){\n    //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n    //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientHeight;\n    //         const minX = boardViewRef.current.offsetLeft;\n    //         const minY = boardViewRef.current.offsetTop;\n    //         const maxX = boardViewRef.current.offsetLeft + ((8/9)*BOARD_VIEW_WIDTH);\n    //         const maxY = boardViewRef.current.offsetTop + ((8/9)*BOARD_VIEW_HEIGHT);\n\n    //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n    //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n\n    //         if (x < minX) {\n    //             activePiece.style.left = `${minX}px`;\n    //         }\n    //         else if (x > maxX) {\n    //             activePiece.style.left = `${maxX}px`;\n    //         }\n    //         else {\n    //             activePiece.style.left = `${x}px`;\n    //         }\n    \n    //         if (y < minY) {\n    //             activePiece.style.top = `${minY}px`;\n    //         }\n    //         else if (y > maxY) {\n    //             activePiece.style.top = `${maxY}px`;\n    //         }\n    //         else {\n    //             activePiece.style.top = `${y}px`;\n    //         }\n    //     }\n    // }\n    \n    // function dropPiece(event: React.MouseEvent){\n    //     const element = event.target as HTMLElement;\n    //     console.log(event);\n    //     if(activePiece && boardViewRef.current){\n    //         setActivePiece(null);\n    //     }\n    // }\n    return(\n        <div id = \"chessboard\"\n        onClick={event=>handleClick(event)}\n        ref={boardViewRef}>\n            {boardView}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}