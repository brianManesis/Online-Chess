{"ast":null,"code":"import { PieceModel } from \"./PieceModel\";\nexport class RookModel extends PieceModel {\n  constructor(type, color) {\n    super(type, color);\n  }\n  validMove(boardModel, startSquare, endSquare, playerColor) {\n    return true;\n  }\n  updatePossibleMoves(boardModel, square, playerColor) {\n    const rook = square.getPiece();\n    this.possibleMoves.clear();\n    if (rook) {}\n    return new Set();\n  }\n\n  // private rookDirections(rook: PieceModel){\n  //     return {\n  //         left:{\n  //             dx:\n  //         }\n  //     }\n  // }\n}","map":{"version":3,"names":["PieceModel","RookModel","constructor","type","color","validMove","boardModel","startSquare","endSquare","playerColor","updatePossibleMoves","square","rook","getPiece","possibleMoves","clear","Set"],"sources":["/home/brian/Desktop/Chess/frontend/src/model/pieces/RookModel.ts"],"sourcesContent":["import { PlayerColor, PieceType } from \"../../utils/Constants\";\nimport { PieceModel } from \"./PieceModel\";\nimport { SquareModel } from \"../SquareModel\";\nimport { ChessBoardModel } from \"../ChessBoardModel\";\n\nexport class RookModel extends PieceModel{\n    public constructor(type: PieceType, color: PlayerColor){\n        super(type, color);\n    }\n\n    public validMove(boardModel:ChessBoardModel, startSquare:SquareModel,\n        endSquare:SquareModel, playerColor:PlayerColor): boolean {\n        return true;\n    }\n\n    private updatePossibleMoves(boardModel:ChessBoardModel, square:SquareModel, playerColor:PlayerColor):Set<string>{\n        const rook = square.getPiece();\n        this.possibleMoves.clear();\n\n        if(rook){\n            \n        }\n        return new Set<string>();\n    }\n\n    // private rookDirections(rook: PieceModel){\n    //     return {\n    //         left:{\n    //             dx:\n    //         }\n    //     }\n    // }\n}"],"mappings":"AACA,SAASA,UAAU,QAAQ,cAAc;AAIzC,OAAO,MAAMC,SAAS,SAASD,UAAU;EAC9BE,WAAWA,CAACC,IAAe,EAAEC,KAAkB,EAAC;IACnD,KAAK,CAACD,IAAI,EAAEC,KAAK,CAAC;EACtB;EAEOC,SAASA,CAACC,UAA0B,EAAEC,WAAuB,EAChEC,SAAqB,EAAEC,WAAuB,EAAW;IACzD,OAAO,IAAI;EACf;EAEQC,mBAAmBA,CAACJ,UAA0B,EAAEK,MAAkB,EAAEF,WAAuB,EAAa;IAC5G,MAAMG,IAAI,GAAGD,MAAM,CAACE,QAAQ,CAAC,CAAC;IAC9B,IAAI,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC;IAE1B,IAAGH,IAAI,EAAC,CAER;IACA,OAAO,IAAII,GAAG,CAAS,CAAC;EAC5B;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}