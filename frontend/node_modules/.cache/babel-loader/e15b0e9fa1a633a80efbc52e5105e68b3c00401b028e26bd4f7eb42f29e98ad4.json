{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx\",\n  _s = $RefreshSig$();\nimport { API_URL, PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSocket, resetSocket } from \"../lib/webSocket/socketSlice\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameplayPage() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const socket = useSelector(state => state.socket);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    if (!socket) {\n      const newSocket = io(\"http://localhost:5000\");\n      dispatch(setSocket(newSocket));\n      console.log(socket);\n    }\n    return () => {\n      dispatch(resetSocket());\n    };\n  }, []);\n  const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(API_URL + \"/api/game/create\").then(res => res.json()).then(data => {\n      setPlayerColor(data.color);\n      setLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamePlayPage\",\n    children: loaded && /*#__PURE__*/_jsxDEV(Chessboard, {\n      playerColor: playerColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(GameplayPage, \"pPebziu/khnKgcsKitn9cajxmrk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = GameplayPage;\nvar _c;\n$RefreshReg$(_c, \"GameplayPage\");","map":{"version":3,"names":["API_URL","PlayerColor","Chessboard","useEffect","useState","useNavigate","useSelector","useDispatch","setSocket","resetSocket","io","jsxDEV","_jsxDEV","GameplayPage","_s","navigate","dispatch","user","state","auth","socket","newSocket","console","log","playerColor","setPlayerColor","WHITE","loaded","setLoaded","fetch","then","res","json","data","color","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx"],"sourcesContent":["import { API_URL,PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setSocket, resetSocket } from \"../lib/webSocket/socketSlice\";\nimport io from \"socket.io-client\";\n\nexport default function GameplayPage(){\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const {user} = useSelector((state:any) => state.auth);\n    const socket = useSelector((state:any) =>state.socket)\n\n    useEffect(() =>{\n        if(!user){\n            navigate('/login')\n        }\n    },[user,navigate]);\n\n    useEffect(() => {\n        if (!socket) {\n            const newSocket = io(\"http://localhost:5000\");\n            dispatch(setSocket(newSocket));\n            console.log(socket);\n\n        }\n        return () => {\n            dispatch(resetSocket());\n        };\n    }, []);\n\n    const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n    const [loaded, setLoaded] = useState(false);\n    useEffect(()=>{\n        fetch(API_URL+\"/api/game/create\")\n        .then(res => res.json())\n        .then(data => {\n            setPlayerColor(data.color);\n            setLoaded(true);\n        });\n    },[]);\n\n    return (\n        <div id=\"gamePlayPage\">\n            {loaded && <Chessboard playerColor={playerColor}></Chessboard>}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,OAAO,EAACC,WAAW,QAAQ,oBAAoB;AACxD,OAAOC,UAAU,MAAM,2CAA2C;AAClE,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,WAAW,QAAQ,8BAA8B;AACrE,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAElC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAM;IAACU;EAAI,CAAC,GAAGX,WAAW,CAAEY,KAAS,IAAKA,KAAK,CAACC,IAAI,CAAC;EACrD,MAAMC,MAAM,GAAGd,WAAW,CAAEY,KAAS,IAAIA,KAAK,CAACE,MAAM,CAAC;EAEtDjB,SAAS,CAAC,MAAK;IACX,IAAG,CAACc,IAAI,EAAC;MACLF,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAC,CAACE,IAAI,EAACF,QAAQ,CAAC,CAAC;EAElBZ,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiB,MAAM,EAAE;MACT,MAAMC,SAAS,GAAGX,EAAE,CAAC,uBAAuB,CAAC;MAC7CM,QAAQ,CAACR,SAAS,CAACa,SAAS,CAAC,CAAC;MAC9BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IAEvB;IACA,OAAO,MAAM;MACTJ,QAAQ,CAACP,WAAW,CAAC,CAAC,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAACH,WAAW,CAACyB,KAAK,CAAC;EACjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3CD,SAAS,CAAC,MAAI;IACV0B,KAAK,CAAC7B,OAAO,GAAC,kBAAkB,CAAC,CAChC8B,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVR,cAAc,CAACQ,IAAI,CAACC,KAAK,CAAC;MAC1BN,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIhB,OAAA;IAAKuB,EAAE,EAAC,cAAc;IAAAC,QAAA,EACjBT,MAAM,iBAAIf,OAAA,CAACV,UAAU;MAACsB,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAAC1B,EAAA,CA1CuBD,YAAY;EAAA,QAEfR,WAAW,EACXE,WAAW,EAEbD,WAAW,EACXA,WAAW;AAAA;AAAAmC,EAAA,GANN5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}