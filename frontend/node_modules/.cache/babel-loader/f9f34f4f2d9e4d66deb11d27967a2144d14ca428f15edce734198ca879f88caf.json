{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/ChessApp/frontend/src/components/chess/game/board/Chessboard.tsx\";\nimport './Chessboard.css';\nimport Square from './Square';\nimport { PawnModel } from '../../../../model/PawnModel';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  const playerColor = props.playerColor;\n\n  // let row = playerColor ==\"white\"?\n  // ['a','b','c','d','e','f','g','h']:['h','g','f','e','d','c','b','a'];\n\n  // let col = playerColor == \"white\"?\n  // [8,7,6,5,4,3,2,1]:[1,2,3,4,5,6,7,8];\n\n  // let board:any= [[],[],[],[],[],[],[],[]];\n  // for(let i = 0; i<8; i++){\n  //     for(let j = 0; j<8; j++){\n  //         let pos:string = row[j]+col[i];\n  //         let color = (j+i+2) % 2 == 0? \"white\":\"black\"\n\n  //         board[i].push(\n  //             <Square color={color} pos={pos} piece={new PawnModel(\"Pawn\",\"white\")}></Square>\n  //         )\n  //     }\n  // }\n  const boardModel = new ChessBoardModel(\"white\").genChessBoard();\n  const board = [[], [], [], [], [], [], [], []];\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      board[i].push( /*#__PURE__*/_jsxDEV(Square, {\n        color: boardModel[i][j].getColor(),\n        pos: boardModel[i][j].getPos(),\n        piece: new PawnModel(\"Pawn\", \"white\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  console.log(boardModel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","PawnModel","ChessBoardModel","jsxDEV","_jsxDEV","Chessboard","props","playerColor","boardModel","genChessBoard","board","i","j","push","color","getColor","pos","getPos","piece","fileName","_jsxFileName","lineNumber","columnNumber","console","log","id","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/ChessApp/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import react from 'react';\nimport './Chessboard.css';\nimport Square from './Square';\nimport { PawnModel } from '../../../../model/PawnModel';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\n\nexport default function Chessboard(props:{playerColor:string}){\n    const playerColor = props.playerColor;\n    \n    // let row = playerColor ==\"white\"?\n    // ['a','b','c','d','e','f','g','h']:['h','g','f','e','d','c','b','a'];\n\n    // let col = playerColor == \"white\"?\n    // [8,7,6,5,4,3,2,1]:[1,2,3,4,5,6,7,8];\n\n    // let board:any= [[],[],[],[],[],[],[],[]];\n    // for(let i = 0; i<8; i++){\n    //     for(let j = 0; j<8; j++){\n    //         let pos:string = row[j]+col[i];\n    //         let color = (j+i+2) % 2 == 0? \"white\":\"black\"\n            \n    //         board[i].push(\n    //             <Square color={color} pos={pos} piece={new PawnModel(\"Pawn\",\"white\")}></Square>\n    //         )\n    //     }\n    // }\n    const boardModel = new ChessBoardModel(\"white\").genChessBoard();\n    const board:any = [[],[],[],[],[],[],[],[]];\n\n    for(let i = 0; i<8; i++){\n        for(let j = 0; j<8; j++){\n            board[i].push(\n                <Square color={boardModel[i][j].getColor()} pos={boardModel[i][j].getPos()} piece={new PawnModel(\"Pawn\",\"white\")}></Square>\n\n            );\n        }\n    }\n    console.log(boardModel);\n    return(\n        <div id = \"chessboard\">\n            {board}\n        </div>\n    );\n}"],"mappings":";AACA,OAAO,kBAAkB;AACzB,OAAOA,MAAM,MAAM,UAAU;AAC7B,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,eAAe,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,eAAe,SAASC,UAAUA,CAACC,KAA0B,EAAC;EAC1D,MAAMC,WAAW,GAAGD,KAAK,CAACC,WAAW;;EAErC;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAMC,UAAU,GAAG,IAAIN,eAAe,CAAC,OAAO,CAAC,CAACO,aAAa,CAAC,CAAC;EAC/D,MAAMC,KAAS,GAAG,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;EAE3C,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,EAAE,EAAC;IACpB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,EAAE,EAAC;MACpBF,KAAK,CAACC,CAAC,CAAC,CAACE,IAAI,eACTT,OAAA,CAACJ,MAAM;QAACc,KAAK,EAAEN,UAAU,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAE;QAACC,GAAG,EAAER,UAAU,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACK,MAAM,CAAC,CAAE;QAACC,KAAK,EAAE,IAAIjB,SAAS,CAAC,MAAM,EAAC,OAAO;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAE9H,CAAC;IACL;EACJ;EACAC,OAAO,CAACC,GAAG,CAAChB,UAAU,CAAC;EACvB,oBACIJ,OAAA;IAAKqB,EAAE,EAAG,YAAY;IAAAC,QAAA,EACjBhB;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACK,EAAA,GArCuBtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}