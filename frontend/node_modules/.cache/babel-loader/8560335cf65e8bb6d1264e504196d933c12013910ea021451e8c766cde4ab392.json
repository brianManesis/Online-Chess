{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx\",\n  _s = $RefreshSig$();\nimport { API_URL, PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { socket } from \"../lib/webSocket/socketConnection\";\nimport UserHeader from \"../components/common/UserHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameplayPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [opponent, setOpponent] = useState(\"\");\n  const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    const createGame = game => {\n      axios.post(API_URL + \"/api/game/create\", {\n        host: game.room,\n        hostColor: game.hostColor\n      }).then(res => {\n        socket.emit('createGame', {\n          host: res.data.host,\n          hostColor: res.data.hostColor\n        });\n        setPlayerColor(res.data.hostColor);\n      }).catch(err => {\n        navigate(\"/\");\n      });\n    };\n    const joinGame = host => {\n      axios.post(API_URL + \"/api/game/join\", {\n        host\n      }).then(res => {\n        setOpponent(res.data.host);\n        console.log(opponent);\n        socket.emit('joinGame', res.data.host);\n        setPlayerColor(res.data.color);\n        socket.emit('playerJoined', user.username);\n      }).catch(err => {\n        navigate(\"/\");\n        alert(\"Lobby does not exist\");\n      });\n    };\n    const leaveGame = () => {\n      socket.emit(\"leaveGame\");\n      navigate(\"/\");\n    };\n    const startGame = opp => {\n      if (!opponent) setOpponent(opp);\n      setLoaded(true);\n    };\n    const gameString = localStorage.getItem('game');\n    if (!gameString) navigate('/');else {\n      const game = JSON.parse(gameString);\n      if (game.host) createGame(game);else joinGame(game.room);\n    }\n    socket.on('endGame', leaveGame);\n    socket.on(\"startGame\", startGame);\n    return () => {\n      socket.off('endGame');\n      socket.off('ready');\n      socket.emit(\"leaveGame\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamePlayPage\",\n    children: loaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserHeader, {\n        username: opponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        socket: socket,\n        playerColor: playerColor,\n        opponent: opponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserHeader, {\n        username: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(GameplayPage, \"hfU7LYTkXfkLWQAe7WwXsCyHS3w=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = GameplayPage;\nvar _c;\n$RefreshReg$(_c, \"GameplayPage\");","map":{"version":3,"names":["API_URL","PlayerColor","Chessboard","useEffect","useState","useNavigate","useSelector","axios","socket","UserHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","GameplayPage","_s","navigate","user","state","auth","opponent","setOpponent","playerColor","setPlayerColor","WHITE","loaded","setLoaded","createGame","game","post","host","room","hostColor","then","res","emit","data","catch","err","joinGame","console","log","color","username","alert","leaveGame","startGame","opp","gameString","localStorage","getItem","JSON","parse","on","off","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx"],"sourcesContent":["import { API_URL,PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\";\nimport { socket } from \"../lib/webSocket/socketConnection\";\nimport UserHeader from \"../components/common/UserHeader\";\n\nexport default function GameplayPage(){\n\n    const navigate = useNavigate();\n\n    const {user} = useSelector((state:any) => state.auth);\n    const [opponent, setOpponent] = useState(\"\");\n    const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() =>{\n        if(!user){\n            navigate('/login')\n        }\n    },[user,navigate]);\n\n    useEffect(() => {\n        const createGame = (game:{host:boolean, hostColor:string, room:string})=>{\n            axios.post(API_URL+\"/api/game/create\",{host:game.room, hostColor:game.hostColor})\n            .then(res => {\n                socket.emit('createGame',{host:res.data.host, hostColor:res.data.hostColor});\n                setPlayerColor(res.data.hostColor);\n            })\n            .catch(err => {\n                navigate(\"/\");\n            });\n        }\n        const joinGame = (host:string)=>{\n            axios.post(API_URL+\"/api/game/join\",{host})\n            .then(res => {\n                setOpponent(res.data.host);\n                console.log(opponent);\n                socket.emit('joinGame', res.data.host);\n                setPlayerColor(res.data.color);\n                socket.emit('playerJoined', user.username);\n            })\n            .catch(err => {\n                navigate(\"/\");\n                alert(\"Lobby does not exist\")\n            });\n        }\n        const leaveGame = ()=>{\n            socket.emit(\"leaveGame\");\n            navigate(\"/\");\n        }\n        const startGame = (opp:string)=>{\n            if(!opponent)setOpponent(opp);\n            setLoaded(true);\n        }\n\n        const gameString = localStorage.getItem('game');\n\n        if(!gameString) navigate('/');\n        else{\n            const game = JSON.parse(gameString);\n\n            if(game.host) createGame(game);\n            else joinGame(game.room);\n        }\n        socket.on('endGame', leaveGame);\n        socket.on(\"startGame\", startGame);\n        \n        return ()=> {\n            socket.off('endGame');\n            socket.off('ready');\n            socket.emit(\"leaveGame\");\n        }\n    }, []);\n\n    return (\n        <div id=\"gamePlayPage\">\n            {loaded && \n            <>\n                <UserHeader username={opponent} />\n                <Chessboard socket={socket} playerColor={playerColor} opponent={opponent}></Chessboard>\n                <UserHeader username={user.username} />\n            </>\n            }\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}