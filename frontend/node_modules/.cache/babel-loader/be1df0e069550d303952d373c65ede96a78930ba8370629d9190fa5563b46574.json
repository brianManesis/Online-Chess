{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  _s();\n  const playerColor = props.playerColor;\n  const boardRef = useRef(null);\n  let activePiece = null;\n\n  //const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n  const boardView = [[], [], [], [], [], [], [], []];\n  const [boardModel, setBoardModel] = useState(new ChessBoardModel(playerColor).genChessBoard());\n  useEffect(() => {\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        boardView[i].push( /*#__PURE__*/_jsxDEV(Square, {\n          squareModel: boardModel[i][j]\n        }, i + \"\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this));\n      }\n    }\n  }, []);\n  function grabPiece(event) {\n    const element = event.target;\n    if (element.classList.contains(\"piece\")) {\n      const x = event.clientX - 50;\n      const y = event.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activePiece = element;\n    }\n  }\n  function movePiece(event) {\n    if (activePiece && boardRef.current) {\n      const minX = boardRef.current.offsetLeft;\n      const minY = boardRef.current.offsetTop;\n      const maxX = boardRef.current.offsetLeft + boardRef.current.clientWidth - 75;\n      const maxY = boardRef.current.offsetTop + boardRef.current.clientHeight - 75;\n      const x = event.clientX - 50;\n      const y = event.clientY - 50;\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(event) {\n    if (activePiece) {\n      activePiece = null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    onMouseMove: event => movePiece(event),\n    onMouseDown: event => grabPiece(event),\n    onMouseUp: event => dropPiece(event),\n    ref: boardRef,\n    children: boardView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Chessboard, \"Ditg7CzPflKHdasuJdDDh4/MMzI=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","ChessBoardModel","useEffect","useRef","useState","BOARD_SIZE","jsxDEV","_jsxDEV","Chessboard","props","_s","playerColor","boardRef","activePiece","boardView","boardModel","setBoardModel","genChessBoard","i","j","push","squareModel","fileName","_jsxFileName","lineNumber","columnNumber","grabPiece","event","element","target","classList","contains","x","clientX","y","clientY","style","position","left","top","movePiece","current","minX","offsetLeft","minY","offsetTop","maxX","clientWidth","maxY","clientHeight","dropPiece","id","onMouseMove","onMouseDown","onMouseUp","ref","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\n\nexport default function Chessboard(props:{playerColor:string}){\n    const playerColor = props.playerColor;\n    const boardRef = useRef<HTMLDivElement>(null);\n    let activePiece: HTMLElement | null = null;\n\n    //const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n    const boardView:any = [[],[],[],[],[],[],[],[]];\n\n    const [boardModel,setBoardModel] = useState(new ChessBoardModel(playerColor).genChessBoard());\n\n    useEffect(()=>{\n        for(let i = 0; i<BOARD_SIZE; i++){\n            for(let j = 0; j<BOARD_SIZE; j++){\n                boardView[i].push(\n                    <Square key={i+\"\"+j} squareModel={boardModel[i][j]}></Square>\n                );\n            }\n        }\n    },[]);\n\n    function grabPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n    \n        if(element.classList.contains(\"piece\")){\n            const x = event.clientX-50;\n            const y = event.clientY-50;\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            activePiece = element;\n        }\n    }\n    \n    function movePiece(event: React.MouseEvent){\n        if(activePiece && boardRef.current){\n            const minX = boardRef.current.offsetLeft;\n            const minY = boardRef.current.offsetTop;\n            const maxX = boardRef.current.offsetLeft + boardRef.current.clientWidth-75;\n            const maxY = boardRef.current.offsetTop + boardRef.current.clientHeight-75;\n\n            const x = event.clientX-50;\n            const y = event.clientY-50;\n\n            if (x < minX) {\n                activePiece.style.left = `${minX}px`;\n            }\n            else if (x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            }\n            else {\n                activePiece.style.left = `${x}px`;\n            }\n    \n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            }\n            else if (y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            }\n            else {\n                activePiece.style.top = `${y}px`;\n            }\n        }\n    }\n    \n    function dropPiece(event: React.MouseEvent){\n\n        if(activePiece){\n            activePiece = null;\n        }\n    }\n    return(\n        <div id = \"chessboard\"\n        onMouseMove={event => movePiece(event)}   \n        onMouseDown={event => grabPiece(event)}\n        onMouseUp={event => dropPiece(event)}\n        ref={boardRef}>\n            {boardView}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}