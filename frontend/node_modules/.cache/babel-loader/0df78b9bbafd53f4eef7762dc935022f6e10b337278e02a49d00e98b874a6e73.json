{"ast":null,"code":"import { BOARD_SIZE } from \"../Constants\";\nexport function findModelSquareFromView(squareView, boardModel) {\n  console.log(boardModel);\n  const squarePos = squareView.id;\n  const chessBoard = boardModel.chessBoard;\n  if (squareView) {\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        if (chessBoard[i][j].getPos() === squarePos) {\n          return chessBoard[i][j];\n        }\n      }\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["BOARD_SIZE","findModelSquareFromView","squareView","boardModel","console","log","squarePos","id","chessBoard","i","j","getPos","undefined"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/utils/View-ModelLocater.ts"],"sourcesContent":["import { BOARD_SIZE } from \"../Constants\";\nimport { ChessBoardModel } from \"../model/ChessBoardModel\";\nimport { SquareModel } from \"../model/SquareModel\";\n\nexport function findModelSquareFromView(squareView: HTMLElement, boardModel:ChessBoardModel){\n    \n    console.log(boardModel);\n\n    const squarePos = squareView.id;\n    const chessBoard:Array<Array<SquareModel>> = boardModel.chessBoard;\n    if(squareView){\n        for(let i = 0; i< BOARD_SIZE; i++){\n            for(let j = 0; j<BOARD_SIZE; j++){\n                if(chessBoard[i][j].getPos() === squarePos){\n                    return chessBoard[i][j];\n                }\n            }\n        }\n    }\n    return undefined;\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AAIzC,OAAO,SAASC,uBAAuBA,CAACC,UAAuB,EAAEC,UAA0B,EAAC;EAExFC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EAEvB,MAAMG,SAAS,GAAGJ,UAAU,CAACK,EAAE;EAC/B,MAAMC,UAAoC,GAAGL,UAAU,CAACK,UAAU;EAClE,IAAGN,UAAU,EAAC;IACV,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAET,UAAU,EAAES,CAAC,EAAE,EAAC;MAC9B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAACV,UAAU,EAAEU,CAAC,EAAE,EAAC;QAC7B,IAAGF,UAAU,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,KAAKL,SAAS,EAAC;UACvC,OAAOE,UAAU,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC;QAC3B;MACJ;IACJ;EACJ;EACA,OAAOE,SAAS;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}