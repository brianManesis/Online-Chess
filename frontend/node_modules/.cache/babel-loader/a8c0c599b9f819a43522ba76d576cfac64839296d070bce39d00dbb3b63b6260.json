{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  _s();\n  var _boardViewRef$current, _boardViewRef$current2;\n  const playerColor = props.playerColor;\n  const boardViewRef = useRef(null);\n  let activePiece = null;\n  const BOARD_VIEW_HEIGHT = (_boardViewRef$current = boardViewRef.current) === null || _boardViewRef$current === void 0 ? void 0 : _boardViewRef$current.clientHeight;\n  const BOARD_VIEW_WIDTH = (_boardViewRef$current2 = boardViewRef.current) === null || _boardViewRef$current2 === void 0 ? void 0 : _boardViewRef$current2.clientHeight;\n  const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n  const boardView = [[], [], [], [], [], [], [], []];\n  const [chessboard, setChessBoard] = useState(boardModel);\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    for (let j = 0; j < BOARD_SIZE; j++) {\n      boardView[i].push( /*#__PURE__*/_jsxDEV(Square, {\n        squareModel: boardModel[i][j]\n      }, i + \"\" + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  function grabPiece(event) {\n    const element = event.target;\n    if (element.classList.contains(\"piece\")) {\n      const x = event.clientX - 50;\n      const y = event.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      activePiece = element;\n    }\n  }\n  function movePiece(event) {\n    if (activePiece && boardViewRef.current) {\n      const minX = boardViewRef.current.offsetLeft;\n      const minY = boardViewRef.current.offsetTop;\n      const maxX = boardViewRef.current.offsetLeft + 7 / 8 * BOARD_VIEW_WIDTH;\n      const maxY = boardViewRef.current.offsetTop + 7 / 8 * BOARD_VIEW_HEIGHT;\n      const x = event.clientX - 50;\n      const y = event.clientY - 50;\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(event) {\n    var _boardViewRef$current3;\n    console.log((_boardViewRef$current3 = boardViewRef.current) === null || _boardViewRef$current3 === void 0 ? void 0 : _boardViewRef$current3.clientHeight);\n    if (activePiece && boardViewRef.current) {\n      activePiece = null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    onMouseMove: event => movePiece(event),\n    onMouseDown: event => grabPiece(event),\n    onMouseUp: event => dropPiece(event),\n    ref: boardViewRef,\n    children: boardView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Chessboard, \"R6bkOrAkGc9/KpcWBKLARBtRqSk=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","ChessBoardModel","useRef","useState","BOARD_SIZE","jsxDEV","_jsxDEV","Chessboard","props","_s","_boardViewRef$current","_boardViewRef$current2","playerColor","boardViewRef","activePiece","BOARD_VIEW_HEIGHT","current","clientHeight","BOARD_VIEW_WIDTH","boardModel","genChessBoard","boardView","chessboard","setChessBoard","i","j","push","squareModel","fileName","_jsxFileName","lineNumber","columnNumber","grabPiece","event","element","target","classList","contains","x","clientX","y","clientY","style","position","left","top","movePiece","minX","offsetLeft","minY","offsetTop","maxX","maxY","dropPiece","_boardViewRef$current3","console","log","id","onMouseMove","onMouseDown","onMouseUp","ref","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\n\nexport default function Chessboard(props:{playerColor:string}){\n    const playerColor = props.playerColor;\n    const boardViewRef = useRef<HTMLDivElement>(null);\n    let activePiece: HTMLElement | null = null;\n\n    const BOARD_VIEW_HEIGHT = boardViewRef.current?.clientHeight;\n    const BOARD_VIEW_WIDTH = boardViewRef.current?.clientHeight;\n\n    const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n    const boardView:any = [[],[],[],[],[],[],[],[]];\n\n    const [chessboard,setChessBoard] = useState(boardModel);\n\n    for(let i = 0; i<BOARD_SIZE; i++){\n        for(let j = 0; j<BOARD_SIZE; j++){\n            boardView[i].push(\n                <Square key={i+\"\"+j} squareModel={boardModel[i][j]}></Square>\n            );\n        }\n    }\n    function grabPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n    \n        if(element.classList.contains(\"piece\")){\n            const x = event.clientX-50;\n            const y = event.clientY-50;\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            activePiece = element;\n        }\n    }\n    \n    function movePiece(event: React.MouseEvent){\n        if(activePiece && boardViewRef.current){\n            const minX = boardViewRef.current.offsetLeft;\n            const minY = boardViewRef.current.offsetTop;\n            const maxX = boardViewRef.current.offsetLeft + ((7/8)*BOARD_VIEW_WIDTH);\n            const maxY = boardViewRef.current.offsetTop + ((7/8)*BOARD_VIEW_HEIGHT);\n\n            const x = event.clientX-50;\n            const y = event.clientY-50;\n\n            if (x < minX) {\n                activePiece.style.left = `${minX}px`;\n            }\n            else if (x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            }\n            else {\n                activePiece.style.left = `${x}px`;\n            }\n    \n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            }\n            else if (y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            }\n            else {\n                activePiece.style.top = `${y}px`;\n            }\n        }\n    }\n    \n    function dropPiece(event: React.MouseEvent){\n        console.log(boardViewRef.current?.clientHeight);\n        if(activePiece && boardViewRef.current){\n            activePiece = null;\n        }\n    }\n    return(\n        <div id = \"chessboard\"\n        onMouseMove={event => movePiece(event)}   \n        onMouseDown={event => grabPiece(event)}\n        onMouseUp={event => dropPiece(event)}\n        ref={boardViewRef}>\n            {boardView}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}