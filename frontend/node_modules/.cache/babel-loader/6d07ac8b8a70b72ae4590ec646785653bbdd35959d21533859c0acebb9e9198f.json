{"ast":null,"code":"import { BishopModel } from \"../model/pieces/BishopModel\";\nimport { KingModel } from \"../model/pieces/KingModel\";\nimport { KnightModel } from \"../model/pieces/KnightModel\";\nimport { PawnModel } from \"../model/pieces/PawnModel\";\nimport { QueenModel } from \"../model/pieces/QueenModel\";\nimport { RookModel } from \"../model/pieces/RookModel\";\nexport const ROW_VALUES = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const COL_VALUES = [1, 2, 3, 4, 5, 6, 7, 8];\nexport const BOARD_SIZE = 8;\nexport let PieceType = /*#__PURE__*/function (PieceType) {\n  PieceType[\"PAWN\"] = \"Pawn\";\n  PieceType[\"BISHOP\"] = \"Bishop\";\n  PieceType[\"KNIGHT\"] = \"Knight\";\n  PieceType[\"ROOK\"] = \"Rook\";\n  PieceType[\"QUEEN\"] = \"Queen\";\n  PieceType[\"KING\"] = \"King\";\n  return PieceType;\n}({});\nexport let PlayerColor = /*#__PURE__*/function (PlayerColor) {\n  PlayerColor[\"WHITE\"] = \"White\";\n  PlayerColor[\"BLACK\"] = \"Black\";\n  return PlayerColor;\n}({});\nconst wp1 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp2 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp3 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp4 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp5 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp6 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp7 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wp8 = new PawnModel(PieceType.PAWN, PlayerColor.WHITE);\nconst wr1 = new RookModel(PieceType.ROOK, PlayerColor.WHITE);\nconst wkn1 = new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE);\nconst wb1 = new BishopModel(PieceType.BISHOP, PlayerColor.WHITE);\nconst wq = new QueenModel(PieceType.QUEEN, PlayerColor.WHITE);\nconst wk = new KingModel(PieceType.KING, PlayerColor.WHITE);\nconst wb2 = new BishopModel(PieceType.BISHOP, PlayerColor.WHITE);\nconst wkn2 = new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE);\nconst wr2 = new RookModel(PieceType.ROOK, PlayerColor.WHITE);\nconst p1 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p2 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p3 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p4 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p5 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p6 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p7 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst p8 = new PawnModel(PieceType.PAWN, PlayerColor.BLACK);\nconst r1 = new RookModel(PieceType.ROOK, PlayerColor.BLACK);\nconst kn1 = new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK);\nconst b1 = new BishopModel(PieceType.BISHOP, PlayerColor.BLACK);\nconst q = new QueenModel(PieceType.QUEEN, PlayerColor.BLACK);\nconst k = new KingModel(PieceType.KING, PlayerColor.BLACK);\nconst b2 = new BishopModel(PieceType.BISHOP, PlayerColor.BLACK);\nconst kn2 = new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK);\nconst r2 = new RookModel(PieceType.ROOK, PlayerColor.BLACK);\nexport const whitePieces = [wp1, wp2, wp3, wp4, wp5, wp6, wp7, wp8, wr1, wkn1, wb1, wq, wk, wb2, wkn2, wr2];\nexport const blackPieces = [p1, p2, p3, p4, p5, p6, p7, p8, r1, kn1, b1, q, k, b2, kn2, r2];","map":{"version":3,"names":["BishopModel","KingModel","KnightModel","PawnModel","QueenModel","RookModel","ROW_VALUES","COL_VALUES","BOARD_SIZE","PieceType","PlayerColor","wp1","PAWN","WHITE","wp2","wp3","wp4","wp5","wp6","wp7","wp8","wr1","ROOK","wkn1","KNIGHT","wb1","BISHOP","wq","QUEEN","wk","KING","wb2","wkn2","wr2","p1","BLACK","p2","p3","p4","p5","p6","p7","p8","r1","kn1","b1","q","k","b2","kn2","r2","whitePieces","blackPieces"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/utils/Constants.ts"],"sourcesContent":["import { BishopModel } from \"../model/pieces/BishopModel\";\nimport { KingModel } from \"../model/pieces/KingModel\";\nimport { KnightModel } from \"../model/pieces/KnightModel\";\nimport { PawnModel } from \"../model/pieces/PawnModel\";\nimport { QueenModel } from \"../model/pieces/QueenModel\";\nimport { RookModel } from \"../model/pieces/RookModel\";\n\nexport const ROW_VALUES = ['a','b','c','d','e','f','g','h'];\n\nexport const COL_VALUES = [1,2,3,4,5,6,7,8];\n\nexport const BOARD_SIZE = 8;\n\nexport enum PieceType{\n    PAWN = 'Pawn',\n    BISHOP = 'Bishop',\n    KNIGHT = 'Knight',\n    ROOK = 'Rook',\n    QUEEN = 'Queen',\n    KING = 'King'\n}\n\nexport enum PlayerColor{\n    WHITE = 'White',\n    BLACK = 'Black'\n}\n\nconst wp1 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp2 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp3 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp4 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp5 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp6 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp7 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wp8 = new PawnModel(PieceType.PAWN,PlayerColor.WHITE);\nconst wr1 = new RookModel(PieceType.ROOK,PlayerColor.WHITE)\nconst wkn1 = new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE);\nconst wb1 = new BishopModel(PieceType.BISHOP, PlayerColor.WHITE);\nconst wq = new QueenModel(PieceType.QUEEN, PlayerColor.WHITE);\nconst wk = new KingModel(PieceType.KING, PlayerColor.WHITE);\nconst wb2 = new BishopModel(PieceType.BISHOP, PlayerColor.WHITE);\nconst wkn2 = new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE);\nconst wr2 = new RookModel(PieceType.ROOK,PlayerColor.WHITE);\n\nconst p1 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p2 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p3 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p4 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p5 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p6 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p7 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst p8 = new PawnModel(PieceType.PAWN,PlayerColor.BLACK);\nconst r1 = new RookModel(PieceType.ROOK,PlayerColor.BLACK)\nconst kn1 = new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK);\nconst b1 = new BishopModel(PieceType.BISHOP, PlayerColor.BLACK);\nconst q = new QueenModel(PieceType.QUEEN, PlayerColor.BLACK);\nconst k = new KingModel(PieceType.KING, PlayerColor.BLACK);\nconst b2 = new BishopModel(PieceType.BISHOP, PlayerColor.BLACK);\nconst kn2 = new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK);\nconst r2 = new RookModel(PieceType.ROOK,PlayerColor.BLACK);\n\nexport const whitePieces = [wp1,wp2,wp3,wp4,wp5,wp6,wp7,wp8,\n                            wr1,wkn1,wb1,wq,wk,wb2,wkn2,wr2];\nexport const blackPieces = [p1,p2,p3,p4,p5,p6,p7,p8,\n                            r1,kn1,b1,q,k,b2,kn2,r2];\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,6BAA6B;AACzD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,SAAS,QAAQ,2BAA2B;AAErD,OAAO,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAE3D,OAAO,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;AAE3C,OAAO,MAAMC,UAAU,GAAG,CAAC;AAE3B,WAAYC,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AASrB,WAAYC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;AAKvB,MAAMC,GAAG,GAAG,IAAIR,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMC,GAAG,GAAG,IAAIX,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAME,GAAG,GAAG,IAAIZ,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMG,GAAG,GAAG,IAAIb,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMI,GAAG,GAAG,IAAId,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMK,GAAG,GAAG,IAAIf,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMM,GAAG,GAAG,IAAIhB,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMO,GAAG,GAAG,IAAIjB,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMQ,GAAG,GAAG,IAAIhB,SAAS,CAACI,SAAS,CAACa,IAAI,EAACZ,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMU,IAAI,GAAG,IAAIrB,WAAW,CAACO,SAAS,CAACe,MAAM,EAAEd,WAAW,CAACG,KAAK,CAAC;AACjE,MAAMY,GAAG,GAAG,IAAIzB,WAAW,CAACS,SAAS,CAACiB,MAAM,EAAEhB,WAAW,CAACG,KAAK,CAAC;AAChE,MAAMc,EAAE,GAAG,IAAIvB,UAAU,CAACK,SAAS,CAACmB,KAAK,EAAElB,WAAW,CAACG,KAAK,CAAC;AAC7D,MAAMgB,EAAE,GAAG,IAAI5B,SAAS,CAACQ,SAAS,CAACqB,IAAI,EAAEpB,WAAW,CAACG,KAAK,CAAC;AAC3D,MAAMkB,GAAG,GAAG,IAAI/B,WAAW,CAACS,SAAS,CAACiB,MAAM,EAAEhB,WAAW,CAACG,KAAK,CAAC;AAChE,MAAMmB,IAAI,GAAG,IAAI9B,WAAW,CAACO,SAAS,CAACe,MAAM,EAAEd,WAAW,CAACG,KAAK,CAAC;AACjE,MAAMoB,GAAG,GAAG,IAAI5B,SAAS,CAACI,SAAS,CAACa,IAAI,EAACZ,WAAW,CAACG,KAAK,CAAC;AAE3D,MAAMqB,EAAE,GAAG,IAAI/B,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMC,EAAE,GAAG,IAAIjC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAME,EAAE,GAAG,IAAIlC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMG,EAAE,GAAG,IAAInC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMI,EAAE,GAAG,IAAIpC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMK,EAAE,GAAG,IAAIrC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMM,EAAE,GAAG,IAAItC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMO,EAAE,GAAG,IAAIvC,SAAS,CAACM,SAAS,CAACG,IAAI,EAACF,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMQ,EAAE,GAAG,IAAItC,SAAS,CAACI,SAAS,CAACa,IAAI,EAACZ,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMS,GAAG,GAAG,IAAI1C,WAAW,CAACO,SAAS,CAACe,MAAM,EAAEd,WAAW,CAACyB,KAAK,CAAC;AAChE,MAAMU,EAAE,GAAG,IAAI7C,WAAW,CAACS,SAAS,CAACiB,MAAM,EAAEhB,WAAW,CAACyB,KAAK,CAAC;AAC/D,MAAMW,CAAC,GAAG,IAAI1C,UAAU,CAACK,SAAS,CAACmB,KAAK,EAAElB,WAAW,CAACyB,KAAK,CAAC;AAC5D,MAAMY,CAAC,GAAG,IAAI9C,SAAS,CAACQ,SAAS,CAACqB,IAAI,EAAEpB,WAAW,CAACyB,KAAK,CAAC;AAC1D,MAAMa,EAAE,GAAG,IAAIhD,WAAW,CAACS,SAAS,CAACiB,MAAM,EAAEhB,WAAW,CAACyB,KAAK,CAAC;AAC/D,MAAMc,GAAG,GAAG,IAAI/C,WAAW,CAACO,SAAS,CAACe,MAAM,EAAEd,WAAW,CAACyB,KAAK,CAAC;AAChE,MAAMe,EAAE,GAAG,IAAI7C,SAAS,CAACI,SAAS,CAACa,IAAI,EAACZ,WAAW,CAACyB,KAAK,CAAC;AAE1D,OAAO,MAAMgB,WAAW,GAAG,CAACxC,GAAG,EAACG,GAAG,EAACC,GAAG,EAACC,GAAG,EAACC,GAAG,EAACC,GAAG,EAACC,GAAG,EAACC,GAAG,EAC/BC,GAAG,EAACE,IAAI,EAACE,GAAG,EAACE,EAAE,EAACE,EAAE,EAACE,GAAG,EAACC,IAAI,EAACC,GAAG,CAAC;AAC5D,OAAO,MAAMmB,WAAW,GAAG,CAAClB,EAAE,EAACE,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,EACvBC,EAAE,EAACC,GAAG,EAACC,EAAE,EAACC,CAAC,EAACC,CAAC,EAACC,EAAE,EAACC,GAAG,EAACC,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}