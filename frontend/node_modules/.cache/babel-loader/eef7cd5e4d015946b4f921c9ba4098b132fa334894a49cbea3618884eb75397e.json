{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx\",\n  _s = $RefreshSig$();\nimport { API_URL, PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { socketConnection } from \"../lib/webSocket/socketConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameplayPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [socket, setSocket] = useState(socketConnection);\n  const [game, setGame] = useState({});\n  const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    const gameString = localStorage.getItem('game');\n    console.log(\"HERE\");\n    const createGame = game => {\n      axios.post(API_URL + \"/api/game/create\", {\n        host: game.room,\n        hostColor: game.hostColor\n      }).then(res => {\n        socket.emit('createGame', res.data.host);\n        setPlayerColor(res.data.hostColor);\n      }).catch(err => {\n        navigate(\"/\");\n      });\n    };\n    const joinGame = host => {\n      axios.post(API_URL + \"/api/game/join\", {\n        host\n      }).then(res => {\n        socket.emit('joinGame', res.data.host);\n        setPlayerColor(res.data.color);\n        socket.emit('startGame');\n      }).catch(err => {\n        navigate(\"/\");\n        alert(\"Lobby does not exist\");\n      });\n    };\n    const leaveGame = () => {\n      socket.emit(\"leaveGame\");\n      navigate(\"/\");\n    };\n    if (!gameString) navigate('/');else {\n      const game = JSON.parse(gameString);\n      if (game.host) createGame(game);else joinGame(game.room);\n    }\n    socket.on('endGame', leaveGame);\n    socket.on(\"ready\", () => setLoaded(true));\n    return () => {\n      socketConnection.emit(\"leaveGame\");\n    };\n  }, [navigate, socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamePlayPage\",\n    children: loaded && /*#__PURE__*/_jsxDEV(Chessboard, {\n      socket: socket,\n      playerColor: playerColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(GameplayPage, \"YEBQXk3KBM2uhUf9ZK7E3lCKxcc=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = GameplayPage;\nvar _c;\n$RefreshReg$(_c, \"GameplayPage\");","map":{"version":3,"names":["API_URL","PlayerColor","Chessboard","useEffect","useState","useNavigate","useSelector","axios","socketConnection","jsxDEV","_jsxDEV","GameplayPage","_s","navigate","user","state","auth","socket","setSocket","game","setGame","playerColor","setPlayerColor","WHITE","loaded","setLoaded","gameString","localStorage","getItem","console","log","createGame","post","host","room","hostColor","then","res","emit","data","catch","err","joinGame","color","alert","leaveGame","JSON","parse","on","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx"],"sourcesContent":["import { API_URL,PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\";\nimport { socketConnection } from \"../lib/webSocket/socketConnection\";\n\nexport default function GameplayPage(){\n\n    const navigate = useNavigate();\n\n    const {user} = useSelector((state:any) => state.auth);\n    const [socket, setSocket] = useState(socketConnection);\n    const [game, setGame] = useState({});\n    const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() =>{\n        if(!user){\n            navigate('/login')\n        }\n    },[user,navigate]);\n\n    useEffect(() => {\n        const gameString = localStorage.getItem('game');\n        console.log(\"HERE\");\n        const createGame = (game:{host:boolean, hostColor:string, room:string})=>{\n            axios.post(API_URL+\"/api/game/create\",{host:game.room, hostColor:game.hostColor})\n            .then(res => {\n                socket.emit('createGame',res.data.host);\n                setPlayerColor(res.data.hostColor);\n            })\n            .catch(err => {\n                navigate(\"/\");\n            });\n        }\n        const joinGame = (host:string)=>{\n            axios.post(API_URL+\"/api/game/join\",{host})\n            .then(res => {\n                socket.emit('joinGame', res.data.host);\n                setPlayerColor(res.data.color);\n                socket.emit('startGame');\n            })\n            .catch(err => {\n                navigate(\"/\");\n                alert(\"Lobby does not exist\")\n            });\n        }\n    \n        const leaveGame = ()=>{\n            socket.emit(\"leaveGame\");\n            navigate(\"/\");\n        }\n\n        if(!gameString) navigate('/');\n        else{\n            const game = JSON.parse(gameString);\n\n            if(game.host) createGame(game);\n            else joinGame(game.room);\n        }\n        socket.on('endGame', leaveGame);\n        socket.on(\"ready\", ()=> setLoaded(true));\n        \n        return ()=> {\n            socketConnection.emit(\"leaveGame\");\n        }\n    }, [navigate, socket]);\n\n    return (\n        <div id=\"gamePlayPage\">\n            {loaded && <Chessboard socket={socket} playerColor={playerColor}></Chessboard>}\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}