{"ast":null,"code":"import { BishopModel } from \"../model/pieces/BishopModel\";\nimport { KingModel } from \"../model/pieces/KingModel\";\nimport { KnightModel } from \"../model/pieces/KnightModel\";\nimport { PawnModel } from \"../model/pieces/PawnModel\";\nimport { QueenModel } from \"../model/pieces/QueenModel\";\nimport { RookModel } from \"../model/pieces/RookModel\";\nconst whitePieces = [new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new PawnModel(PieceType.PAWN, PlayerColor.WHITE), new RookModel(PieceType.ROOK, PlayerColor.WHITE), new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE), new BishopModel(PieceType.BISHOP, PlayerColor.WHITE), new QueenModel(PieceType.QUEEN, PlayerColor.WHITE), new KingModel(PieceType.KING, PlayerColor.WHITE), new BishopModel(PieceType.BISHOP, PlayerColor.WHITE), new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE), new RookModel(PieceType.ROOK, PlayerColor.WHITE)];\nconst blackPieces = [new RookModel(PieceType.ROOK, PlayerColor.BLACK), new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK), new BishopModel(PieceType.BISHOP, PlayerColor.BLACK), new QueenModel(PieceType.QUEEN, PlayerColor.BLACK), new KingModel(PieceType.KING, PlayerColor.BLACK), new BishopModel(PieceType.BISHOP, PlayerColor.BLACK), new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK), new RookModel(PieceType.ROOK, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK), new PawnModel(PieceType.PAWN, PlayerColor.BLACK)];\nexport const ROW_VALUES = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const COL_VALUES = [1, 2, 3, 4, 5, 6, 7, 8];\nexport const BOARD_SIZE = 8;\nexport let PieceType = /*#__PURE__*/function (PieceType) {\n  PieceType[\"PAWN\"] = \"Pawn\";\n  PieceType[\"BISHOP\"] = \"Bishop\";\n  PieceType[\"KNIGHT\"] = \"Knight\";\n  PieceType[\"ROOK\"] = \"Rook\";\n  PieceType[\"QUEEN\"] = \"Queen\";\n  PieceType[\"KING\"] = \"King\";\n  return PieceType;\n}({});\nexport let PlayerColor = /*#__PURE__*/function (PlayerColor) {\n  PlayerColor[\"WHITE\"] = \"White\";\n  PlayerColor[\"BLACK\"] = \"Black\";\n  return PlayerColor;\n}({});","map":{"version":3,"names":["BishopModel","KingModel","KnightModel","PawnModel","QueenModel","RookModel","whitePieces","PieceType","PAWN","PlayerColor","WHITE","ROOK","KNIGHT","BISHOP","QUEEN","KING","blackPieces","BLACK","ROW_VALUES","COL_VALUES","BOARD_SIZE"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/utils/Constants.ts"],"sourcesContent":["import { BishopModel } from \"../model/pieces/BishopModel\";\nimport { KingModel } from \"../model/pieces/KingModel\";\nimport { KnightModel } from \"../model/pieces/KnightModel\";\nimport { PawnModel } from \"../model/pieces/PawnModel\";\nimport { QueenModel } from \"../model/pieces/QueenModel\";\nimport { RookModel } from \"../model/pieces/RookModel\";\n\nconst whitePieces = [\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new PawnModel(PieceType.PAWN,PlayerColor.WHITE),\n    new RookModel(PieceType.ROOK,PlayerColor.WHITE),\n    new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE),\n    new BishopModel(PieceType.BISHOP, PlayerColor.WHITE),\n    new QueenModel(PieceType.QUEEN, PlayerColor.WHITE),\n    new KingModel(PieceType.KING, PlayerColor.WHITE),\n    new BishopModel(PieceType.BISHOP, PlayerColor.WHITE),\n    new KnightModel(PieceType.KNIGHT, PlayerColor.WHITE),\n    new RookModel(PieceType.ROOK,PlayerColor.WHITE)\n];\n\n const blackPieces = [\n    new RookModel(PieceType.ROOK,PlayerColor.BLACK),\n    new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK),\n    new BishopModel(PieceType.BISHOP, PlayerColor.BLACK),\n    new QueenModel(PieceType.QUEEN, PlayerColor.BLACK),\n    new KingModel(PieceType.KING, PlayerColor.BLACK),\n    new BishopModel(PieceType.BISHOP, PlayerColor.BLACK),\n    new KnightModel(PieceType.KNIGHT, PlayerColor.BLACK),\n    new RookModel(PieceType.ROOK,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK),\n    new PawnModel(PieceType.PAWN,PlayerColor.BLACK)\n];\nexport const ROW_VALUES = ['a','b','c','d','e','f','g','h'];\n\nexport const COL_VALUES = [1,2,3,4,5,6,7,8];\n\nexport const BOARD_SIZE = 8;\n\nexport enum PieceType{\n    PAWN = 'Pawn',\n    BISHOP = 'Bishop',\n    KNIGHT = 'Knight',\n    ROOK = 'Rook',\n    QUEEN = 'Queen',\n    KING = 'King'\n}\n\nexport enum PlayerColor{\n    WHITE = 'White',\n    BLACK = 'Black'\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}