{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx\",\n  _s = $RefreshSig$();\nimport { API_URL, PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setSocket } from \"../lib/webSocket/socketSlice\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameplayPage() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const socket = useSelector(state => state.socket);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    if (!socket) {\n      const newSocket = io(\"http://localhost:5000\");\n      dispatch(setSocket(newSocket));\n    }\n  }, []);\n  const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(API_URL + \"/api/game/create\").then(res => res.json()).then(data => {\n      setPlayerColor(data.color);\n      setLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamePlayPage\",\n    children: loaded && /*#__PURE__*/_jsxDEV(Chessboard, {\n      playerColor: playerColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(GameplayPage, \"pPebziu/khnKgcsKitn9cajxmrk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = GameplayPage;\nvar _c;\n$RefreshReg$(_c, \"GameplayPage\");","map":{"version":3,"names":["API_URL","PlayerColor","Chessboard","useEffect","useState","useNavigate","useSelector","useDispatch","setSocket","io","jsxDEV","_jsxDEV","GameplayPage","_s","navigate","dispatch","user","state","auth","socket","newSocket","playerColor","setPlayerColor","WHITE","loaded","setLoaded","fetch","then","res","json","data","color","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx"],"sourcesContent":["import { API_URL,PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setSocket } from \"../lib/webSocket/socketSlice\";\nimport io from \"socket.io-client\";\n\nexport default function GameplayPage(){\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const {user} = useSelector((state:any) => state.auth);\n    const socket = useSelector((state:any) =>state.socket)\n\n    useEffect(() =>{\n        if(!user){\n            navigate('/login')\n        }\n    },[user,navigate]);\n\n    useEffect(() => {\n        if (!socket) {\n            const newSocket = io(\"http://localhost:5000\");\n            dispatch(setSocket(newSocket));\n        }\n    }, []);\n\n    const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n    const [loaded, setLoaded] = useState(false);\n    useEffect(()=>{\n        fetch(API_URL+\"/api/game/create\")\n        .then(res => res.json())\n        .then(data => {\n            setPlayerColor(data.color);\n            setLoaded(true);\n        });\n    },[]);\n\n    return (\n        <div id=\"gamePlayPage\">\n            {loaded && <Chessboard playerColor={playerColor}></Chessboard>}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAASA,OAAO,EAACC,WAAW,QAAQ,oBAAoB;AACxD,OAAOC,UAAU,MAAM,2CAA2C;AAClE,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAElC,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM;IAACS;EAAI,CAAC,GAAGV,WAAW,CAAEW,KAAS,IAAKA,KAAK,CAACC,IAAI,CAAC;EACrD,MAAMC,MAAM,GAAGb,WAAW,CAAEW,KAAS,IAAIA,KAAK,CAACE,MAAM,CAAC;EAEtDhB,SAAS,CAAC,MAAK;IACX,IAAG,CAACa,IAAI,EAAC;MACLF,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAC,CAACE,IAAI,EAACF,QAAQ,CAAC,CAAC;EAElBX,SAAS,CAAC,MAAM;IACZ,IAAI,CAACgB,MAAM,EAAE;MACT,MAAMC,SAAS,GAAGX,EAAE,CAAC,uBAAuB,CAAC;MAC7CM,QAAQ,CAACP,SAAS,CAACY,SAAS,CAAC,CAAC;IAClC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAACH,WAAW,CAACsB,KAAK,CAAC;EACjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3CD,SAAS,CAAC,MAAI;IACVuB,KAAK,CAAC1B,OAAO,GAAC,kBAAkB,CAAC,CAChC2B,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACVR,cAAc,CAACQ,IAAI,CAACC,KAAK,CAAC;MAC1BN,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,oBACId,OAAA;IAAKqB,EAAE,EAAC,cAAc;IAAAC,QAAA,EACjBT,MAAM,iBAAIb,OAAA,CAACT,UAAU;MAACmB,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAACxB,EAAA,CArCuBD,YAAY;EAAA,QAEfP,WAAW,EACXE,WAAW,EAEbD,WAAW,EACXA,WAAW;AAAA;AAAAgC,EAAA,GANN1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}