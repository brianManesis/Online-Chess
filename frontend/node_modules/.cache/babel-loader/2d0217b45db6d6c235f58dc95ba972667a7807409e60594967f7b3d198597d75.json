{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  _s();\n  const playerColor = props.playerColor;\n  const boardViewRef = useRef(null);\n  const [activePiece, setActivePiece] = useState(null);\n  const [grabPiecePos, setGrabPiecePos] = useState(null);\n  const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n  const boardView = [[], [], [], [], [], [], [], []];\n  for (let i = 0; i < BOARD_SIZE; i++) {\n    for (let j = 0; j < BOARD_SIZE; j++) {\n      boardView[i].push( /*#__PURE__*/_jsxDEV(Square, {\n        squareModel: boardModel[i][j]\n      }, i + \"\" + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  function grabPiece(event) {\n    var _element$parentElemen, _element$parentElemen2;\n    const element = event.target;\n    const currentBoard = boardViewRef.current;\n    setGrabPiecePos(((_element$parentElemen = element.parentElement) === null || _element$parentElemen === void 0 ? void 0 : _element$parentElemen.id) + \"\");\n    console.log((_element$parentElemen2 = element.parentElement) === null || _element$parentElemen2 === void 0 ? void 0 : _element$parentElemen2.id);\n    if (element.classList.contains(\"piece\") && currentBoard) {\n      const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n      const BOARD_VIEW_WIDTH = boardViewRef.current.clientWidth;\n      const x = event.clientX - BOARD_VIEW_WIDTH / 16;\n      const y = event.clientY - BOARD_VIEW_HEIGHT / 16;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(event) {\n    if (activePiece && boardViewRef.current) {\n      const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n      const BOARD_VIEW_WIDTH = boardViewRef.current.clientHeight;\n      const minX = boardViewRef.current.offsetLeft;\n      const minY = boardViewRef.current.offsetTop;\n      const maxX = boardViewRef.current.offsetLeft + 8 / 9 * BOARD_VIEW_WIDTH;\n      const maxY = boardViewRef.current.offsetTop + 8 / 9 * BOARD_VIEW_HEIGHT;\n      const x = event.clientX - BOARD_VIEW_WIDTH / 16;\n      const y = event.clientY - BOARD_VIEW_HEIGHT / 16;\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(event) {\n    const element = event.target;\n    console.log(event);\n    if (activePiece && boardViewRef.current) {\n      setActivePiece(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    onMouseMove: event => movePiece(event),\n    onMouseDown: event => grabPiece(event),\n    onMouseUp: event => dropPiece(event),\n    ref: boardViewRef,\n    children: boardView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Chessboard, \"bcMENRtHT3nIWkSYW+d4LtPqixM=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","ChessBoardModel","useRef","useState","BOARD_SIZE","jsxDEV","_jsxDEV","Chessboard","props","_s","playerColor","boardViewRef","activePiece","setActivePiece","grabPiecePos","setGrabPiecePos","boardModel","genChessBoard","boardView","i","j","push","squareModel","fileName","_jsxFileName","lineNumber","columnNumber","grabPiece","event","_element$parentElemen","_element$parentElemen2","element","target","currentBoard","current","parentElement","id","console","log","classList","contains","BOARD_VIEW_HEIGHT","clientHeight","BOARD_VIEW_WIDTH","clientWidth","x","clientX","y","clientY","style","position","left","top","movePiece","minX","offsetLeft","minY","offsetTop","maxX","maxY","dropPiece","onMouseMove","onMouseDown","onMouseUp","ref","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE } from '../../../../Constants';\n\nexport default function Chessboard(props:{playerColor:string}){\n    const playerColor = props.playerColor;\n    const boardViewRef = useRef<HTMLDivElement>(null);\n    const [activePiece, setActivePiece] = useState< HTMLElement | null>(null);\n    const [grabPiecePos, setGrabPiecePos] = useState<string | null>(null)\n    const boardModel = new ChessBoardModel(playerColor).genChessBoard();\n    const boardView:any = [[],[],[],[],[],[],[],[]];\n\n    for(let i = 0; i<BOARD_SIZE; i++){\n        for(let j = 0; j<BOARD_SIZE; j++){\n            boardView[i].push(\n                <Square key={i+\"\"+j} squareModel={boardModel[i][j]}></Square>\n            );\n        }\n    }\n    function grabPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        const currentBoard = boardViewRef.current;\n        setGrabPiecePos(element.parentElement?.id+\"\");\n        console.log(element.parentElement?.id);\n        if(element.classList.contains(\"piece\") && currentBoard){\n            const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n            const BOARD_VIEW_WIDTH = boardViewRef.current.clientWidth;\n            const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n            const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n            element.style.position = \"absolute\";\n            element.style.left = `${x}px`;\n            element.style.top = `${y}px`;\n            setActivePiece(element);\n        }\n    }\n    \n    function movePiece(event: React.MouseEvent){\n        if(activePiece && boardViewRef.current){\n            const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n            const BOARD_VIEW_WIDTH = boardViewRef.current.clientHeight;\n            const minX = boardViewRef.current.offsetLeft;\n            const minY = boardViewRef.current.offsetTop;\n            const maxX = boardViewRef.current.offsetLeft + ((8/9)*BOARD_VIEW_WIDTH);\n            const maxY = boardViewRef.current.offsetTop + ((8/9)*BOARD_VIEW_HEIGHT);\n\n            const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n            const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n\n            if (x < minX) {\n                activePiece.style.left = `${minX}px`;\n            }\n            else if (x > maxX) {\n                activePiece.style.left = `${maxX}px`;\n            }\n            else {\n                activePiece.style.left = `${x}px`;\n            }\n    \n            if (y < minY) {\n                activePiece.style.top = `${minY}px`;\n            }\n            else if (y > maxY) {\n                activePiece.style.top = `${maxY}px`;\n            }\n            else {\n                activePiece.style.top = `${y}px`;\n            }\n        }\n    }\n    \n    function dropPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        console.log(event);\n        if(activePiece && boardViewRef.current){\n            setActivePiece(null);\n        }\n    }\n    return(\n        <div id = \"chessboard\"\n        onMouseMove={event => movePiece(event)}   \n        onMouseDown={event => grabPiece(event)}\n        onMouseUp={event => dropPiece(event)}\n        ref={boardViewRef}>\n            {boardView}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}