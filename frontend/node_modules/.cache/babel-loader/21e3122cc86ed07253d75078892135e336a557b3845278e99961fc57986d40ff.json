{"ast":null,"code":"export function possiblePawnMoves(square) {\n  let pawn = square.getPiece();\n  let pos = square.getPos();\n  let col = pos.charAt(0);\n  let row = parseInt(pos.charAt(1));\n  let possibleMoves = new Set();\n  if (pawn && pawn.HAS_MOVED && row < 9) {\n    possibleMoves.add(col + (row + 1));\n  } else if (pawn && !pawn.HAS_MOVED && row < 9) {\n    possibleMoves.add(col + (row + 1));\n    if (row + 2 <= 8) {\n      possibleMoves.add(col + (row + 1));\n    }\n  }\n}","map":{"version":3,"names":["possiblePawnMoves","square","pawn","getPiece","pos","getPos","col","charAt","row","parseInt","possibleMoves","Set","HAS_MOVED","add"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/model/PossibleMoves.ts"],"sourcesContent":["import { SquareModel } from \"./SquareModel\";\n\nexport function possiblePawnMoves(square:SquareModel){\n    let pawn = square.getPiece();\n    let pos = square.getPos();\n    let col = pos.charAt(0);\n    let row = parseInt(pos.charAt(1));\n    let possibleMoves:Set<string> = new Set();\n\n    if(pawn && pawn.HAS_MOVED && row < 9){\n        possibleMoves.add(col+(row+1));\n    }\n    else if(pawn && !pawn.HAS_MOVED && (row < 9)){\n        possibleMoves.add(col+(row+1));\n        if(row+2 <= 8){\n            possibleMoves.add(col+(row+1));\n        }\n    }\n}"],"mappings":"AAEA,OAAO,SAASA,iBAAiBA,CAACC,MAAkB,EAAC;EACjD,IAAIC,IAAI,GAAGD,MAAM,CAACE,QAAQ,CAAC,CAAC;EAC5B,IAAIC,GAAG,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;EACzB,IAAIC,GAAG,GAAGF,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC;EACvB,IAAIC,GAAG,GAAGC,QAAQ,CAACL,GAAG,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EACjC,IAAIG,aAAyB,GAAG,IAAIC,GAAG,CAAC,CAAC;EAEzC,IAAGT,IAAI,IAAIA,IAAI,CAACU,SAAS,IAAIJ,GAAG,GAAG,CAAC,EAAC;IACjCE,aAAa,CAACG,GAAG,CAACP,GAAG,IAAEE,GAAG,GAAC,CAAC,CAAC,CAAC;EAClC,CAAC,MACI,IAAGN,IAAI,IAAI,CAACA,IAAI,CAACU,SAAS,IAAKJ,GAAG,GAAG,CAAE,EAAC;IACzCE,aAAa,CAACG,GAAG,CAACP,GAAG,IAAEE,GAAG,GAAC,CAAC,CAAC,CAAC;IAC9B,IAAGA,GAAG,GAAC,CAAC,IAAI,CAAC,EAAC;MACVE,aAAa,CAACG,GAAG,CAACP,GAAG,IAAEE,GAAG,GAAC,CAAC,CAAC,CAAC;IAClC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}