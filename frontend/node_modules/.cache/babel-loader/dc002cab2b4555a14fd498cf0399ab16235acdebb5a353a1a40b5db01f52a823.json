{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\nconst userJson = localStorage.getItem('user') || \"\";\nconst user = JSON.parse(userJson);\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (err) {\n    const message = err.response && err.response.data && err.response.data.message || err.message || err.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","userJson","localStorage","getItem","user","JSON","parse","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","err","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/lib/auth/authSlice.ts"],"sourcesContent":["import {createSlice, createAsyncThunk} from  '@reduxjs/toolkit';\nimport authService from './authService';\n\nconst userJson = localStorage.getItem('user') || \"\";\nconst user:any = JSON.parse(userJson);\n\nconst initialState = {\n    user: user? user:null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: ''\n}\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n    try{\n        return await authService.register(user);\n    } catch(err:any){\n        const message = (err.response && err.response.data && err.response.data.message) ||\n                        err.message || err.toString();\n        return thunkAPI.rejectWithValue(message);\n    }\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers:{\n        reset: (state)=>{\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = false;\n            state.message = \"\"\n        }\n    },\n    extraReducers:(builder) => {\n        builder\n        .addCase(register.pending,(state) =>{\n            state.isLoading = true\n        })\n        .addCase(register.fulfilled, (state,action) => {\n            state.isLoading = false\n            state.isSuccess = true\n            state.user = action.payload\n        })\n        .addCase(register.rejected, (state,action:any)=>{\n            state.isLoading = false\n            state.isError = true\n            state.message = action.payload\n            state.user = null\n        })\n    }\n})\n\nexport const {reset} = authSlice.actions\nexport default authSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAC/D,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;AACnD,MAAMC,IAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;AAErC,MAAMM,YAAY,GAAG;EACjBH,IAAI,EAAEA,IAAI,GAAEA,IAAI,GAAC,IAAI;EACrBI,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGb,gBAAgB,CAAC,eAAe,EAAE,OAAOK,IAAI,EAAES,QAAQ,KAAK;EAChF,IAAG;IACC,OAAO,MAAMb,WAAW,CAACY,QAAQ,CAACR,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAMU,GAAO,EAAC;IACZ,MAAMH,OAAO,GAAIG,GAAG,CAACC,QAAQ,IAAID,GAAG,CAACC,QAAQ,CAACC,IAAI,IAAIF,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAC/DG,GAAG,CAACH,OAAO,IAAIG,GAAG,CAACG,QAAQ,CAAC,CAAC;IAC7C,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAGrB,WAAW,CAAC;EACjCsB,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAC;IACLC,KAAK,EAAGC,KAAK,IAAG;MACZA,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACd,SAAS,GAAG,KAAK;MACvBc,KAAK,CAACZ,OAAO,GAAG,EAAE;IACtB;EACJ,CAAC;EACDa,aAAa,EAAEC,OAAO,IAAK;IACvBA,OAAO,CACNC,OAAO,CAACd,QAAQ,CAACe,OAAO,EAAEJ,KAAK,IAAI;MAChCA,KAAK,CAACb,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACd,QAAQ,CAACgB,SAAS,EAAE,CAACL,KAAK,EAACM,MAAM,KAAK;MAC3CN,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACd,SAAS,GAAG,IAAI;MACtBc,KAAK,CAACnB,IAAI,GAAGyB,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACd,QAAQ,CAACmB,QAAQ,EAAE,CAACR,KAAK,EAACM,MAAU,KAAG;MAC5CN,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACf,OAAO,GAAG,IAAI;MACpBe,KAAK,CAACZ,OAAO,GAAGkB,MAAM,CAACC,OAAO;MAC9BP,KAAK,CAACnB,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACkB;AAAK,CAAC,GAAGH,SAAS,CAACa,OAAO;AACxC,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}