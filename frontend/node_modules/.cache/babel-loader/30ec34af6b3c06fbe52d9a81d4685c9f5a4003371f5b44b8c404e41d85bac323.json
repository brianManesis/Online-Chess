{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/ChessApp/frontend/src/components/chess/game/board/Chessboard.tsx\";\nimport './Chessboard.css';\nimport './Square';\nimport Square from './Square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chessboard(props) {\n  let row = ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'];\n  let col = [1, 2, 3, 4, 5, 6, 7, 8];\n  const playerColor = props.playerColor;\n  const startRow = playerColor === \"white\" ? 'a' : 'h';\n  const startCol = playerColor === \"white\" ? 8 : 1;\n  const endRow = playerColor === \"white\" ? 'h' : 'a';\n  const endCol = playerColor === \"white\" ? 1 : 8;\n  let board = [];\n  for (let i = 0; i < 8; i++) {\n    for (let j = 0; j < 8; j++) {\n      let pos = row[j] + col[i];\n      console.log(i);\n      board.push( /*#__PURE__*/_jsxDEV(Square, {\n        color: \"white\",\n        pos: pos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Square","jsxDEV","_jsxDEV","Chessboard","props","row","col","playerColor","startRow","startCol","endRow","endCol","board","i","j","pos","console","log","push","color","fileName","_jsxFileName","lineNumber","columnNumber","id","children","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/ChessApp/frontend/src/components/chess/game/board/Chessboard.tsx"],"sourcesContent":["import react from 'react';\nimport './Chessboard.css';\nimport './Square';\nimport Square from './Square';\n\nexport default function Chessboard(props:{playerColor:string}){\n    let row = ['h','g','f','e','d','c','b','a'];\n    let col = [1,2,3,4,5,6,7,8];\n    const playerColor = props.playerColor;\n    const startRow:string = playerColor === \"white\"?  'a':'h';\n    const startCol:number = playerColor === \"white\"?  8:1;\n    const endRow:string = playerColor === \"white\"? 'h':'a';\n    const endCol:number = playerColor === \"white\"? 1:8;\n    let board = [];\n    for(let i = 0; i<8; i++){\n        for(let j = 0; j<8; j++){\n            let pos:string = row[j]+col[i];\n            console.log(i);\n            board.push(\n                <Square color='white' pos={pos}></Square>\n            )\n        }\n    }\n    return(\n        <div id = \"chessboard\">\n            {board}\n        </div>\n    );\n}"],"mappings":";AACA,OAAO,kBAAkB;AACzB,OAAO,UAAU;AACjB,OAAOA,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,UAAUA,CAACC,KAA0B,EAAC;EAC1D,IAAIC,GAAG,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;EAC3C,IAAIC,GAAG,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAC3B,MAAMC,WAAW,GAAGH,KAAK,CAACG,WAAW;EACrC,MAAMC,QAAe,GAAGD,WAAW,KAAK,OAAO,GAAG,GAAG,GAAC,GAAG;EACzD,MAAME,QAAe,GAAGF,WAAW,KAAK,OAAO,GAAG,CAAC,GAAC,CAAC;EACrD,MAAMG,MAAa,GAAGH,WAAW,KAAK,OAAO,GAAE,GAAG,GAAC,GAAG;EACtD,MAAMI,MAAa,GAAGJ,WAAW,KAAK,OAAO,GAAE,CAAC,GAAC,CAAC;EAClD,IAAIK,KAAK,GAAG,EAAE;EACd,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,EAAE,EAAC;IACpB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,EAAE,EAAC;MACpB,IAAIC,GAAU,GAAGV,GAAG,CAACS,CAAC,CAAC,GAACR,GAAG,CAACO,CAAC,CAAC;MAC9BG,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;MACdD,KAAK,CAACM,IAAI,eACNhB,OAAA,CAACF,MAAM;QAACmB,KAAK,EAAC,OAAO;QAACJ,GAAG,EAAEA;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAC5C,CAAC;IACL;EACJ;EACA,oBACIrB,OAAA;IAAKsB,EAAE,EAAG,YAAY;IAAAC,QAAA,EACjBb;EAAK;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACG,EAAA,GAvBuBvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}