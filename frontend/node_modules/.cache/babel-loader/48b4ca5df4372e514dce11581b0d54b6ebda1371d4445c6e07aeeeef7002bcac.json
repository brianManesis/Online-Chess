{"ast":null,"code":"import { PieceModel } from \"./PieceModel\";\nexport class QueenModel extends PieceModel {\n  constructor(type, color) {\n    super(type, color);\n  }\n  validMove(boardModel, startSquare, endSquare, playerColor) {\n    const pos = endSquare.getPos();\n    return this.updatePossibleMoves(boardModel, startSquare, playerColor).has(pos);\n  }\n  updatePossibleMoves(boardModel, square, playerColor) {\n    const queen = square.getPiece();\n    const board = boardModel.getChessBoard();\n    this.possibleMoves.clear();\n    if (!queen) return this.possibleMoves;\n    const queenDirections = this.queenDirections();\n    const chessNotation = square.getPos();\n    const posArray = boardModel.posToArrayPos(chessNotation);\n    if (!posArray) return this.possibleMoves;\n    let i = posArray.i;\n    let j = posArray.j;\n    for (const [key, value] of Object.entries(queenDirections)) {\n      this.checkSquares(board, i, j, value.dx, value.dy, playerColor);\n    }\n    console.log(this.possibleMoves);\n    return this.possibleMoves;\n  }\n  queenDirections() {\n    return {\n      left: {\n        dx: -1,\n        dy: 0\n      },\n      right: {\n        dx: 1,\n        dy: 0\n      },\n      up: {\n        dx: 0,\n        dy: -1\n      },\n      down: {\n        dx: 0,\n        dy: 1\n      },\n      leftUp: {\n        dx: -1,\n        dy: -1\n      },\n      rightUp: {\n        dx: 1,\n        dy: -1\n      },\n      leftDown: {\n        dx: -1,\n        dy: 1\n      },\n      rightDown: {\n        dx: 1,\n        dy: 1\n      }\n    };\n  }\n}","map":{"version":3,"names":["PieceModel","QueenModel","constructor","type","color","validMove","boardModel","startSquare","endSquare","playerColor","pos","getPos","updatePossibleMoves","has","square","queen","getPiece","board","getChessBoard","possibleMoves","clear","queenDirections","chessNotation","posArray","posToArrayPos","i","j","key","value","Object","entries","checkSquares","dx","dy","console","log","left","right","up","down","leftUp","rightUp","leftDown","rightDown"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/QueenModel.ts"],"sourcesContent":["import { PlayerColor, PieceType } from \"../../utils/Constants\";\nimport { PieceModel } from \"./PieceModel\";\nimport { SquareModel } from \"../SquareModel\";\nimport { ChessBoardModel } from \"../ChessBoardModel\";\n\nexport class QueenModel extends PieceModel{\n    public constructor(type: PieceType, color: PlayerColor){\n        super(type, color);\n    }\n\n    public validMove(boardModel:ChessBoardModel, startSquare:SquareModel,\n        endSquare:SquareModel, playerColor:PlayerColor): boolean {\n            const pos = endSquare.getPos();\n            return this.updatePossibleMoves(boardModel,startSquare,playerColor).has(pos);    }\n\n    private updatePossibleMoves(boardModel:ChessBoardModel, square:SquareModel, playerColor:PlayerColor):Set<string>{\n        const queen = square.getPiece();\n        const board = boardModel.getChessBoard();\n        this.possibleMoves.clear();\n\n        if(!queen) return this.possibleMoves;\n\n        const queenDirections = this.queenDirections();\n        const chessNotation = square.getPos();\n        const posArray = boardModel.posToArrayPos(chessNotation);\n\n        if(!posArray) return this.possibleMoves;\n\n        let i = posArray.i;\n        let j = posArray.j; \n        \n        for(const [key,value] of Object.entries(queenDirections)){\n            this.checkSquares(board,i,j,value.dx,value.dy,playerColor);\n        }\n        console.log(this.possibleMoves)\n\n        return this.possibleMoves;\n    }\n\n    private queenDirections(){\n        return {\n            left:{\n                dx:-1,\n                dy:0\n            },\n            right:{\n                dx:1,\n                dy:0\n            },\n            up:{\n                dx:0,\n                dy:-1\n            },\n            down:{\n                dx:0,\n                dy:1\n            },\n            leftUp:{\n                dx:-1,\n                dy:-1\n            },\n            rightUp:{\n                dx:1,\n                dy:-1\n            },\n            leftDown:{\n                dx:-1,\n                dy:1\n            },\n            rightDown:{\n                dx:1,\n                dy:1\n            }\n        }\n    }\n}"],"mappings":"AACA,SAASA,UAAU,QAAQ,cAAc;AAIzC,OAAO,MAAMC,UAAU,SAASD,UAAU;EAC/BE,WAAWA,CAACC,IAAe,EAAEC,KAAkB,EAAC;IACnD,KAAK,CAACD,IAAI,EAAEC,KAAK,CAAC;EACtB;EAEOC,SAASA,CAACC,UAA0B,EAAEC,WAAuB,EAChEC,SAAqB,EAAEC,WAAuB,EAAW;IACrD,MAAMC,GAAG,GAAGF,SAAS,CAACG,MAAM,CAAC,CAAC;IAC9B,OAAO,IAAI,CAACC,mBAAmB,CAACN,UAAU,EAACC,WAAW,EAACE,WAAW,CAAC,CAACI,GAAG,CAACH,GAAG,CAAC;EAAK;EAEjFE,mBAAmBA,CAACN,UAA0B,EAAEQ,MAAkB,EAAEL,WAAuB,EAAa;IAC5G,MAAMM,KAAK,GAAGD,MAAM,CAACE,QAAQ,CAAC,CAAC;IAC/B,MAAMC,KAAK,GAAGX,UAAU,CAACY,aAAa,CAAC,CAAC;IACxC,IAAI,CAACC,aAAa,CAACC,KAAK,CAAC,CAAC;IAE1B,IAAG,CAACL,KAAK,EAAE,OAAO,IAAI,CAACI,aAAa;IAEpC,MAAME,eAAe,GAAG,IAAI,CAACA,eAAe,CAAC,CAAC;IAC9C,MAAMC,aAAa,GAAGR,MAAM,CAACH,MAAM,CAAC,CAAC;IACrC,MAAMY,QAAQ,GAAGjB,UAAU,CAACkB,aAAa,CAACF,aAAa,CAAC;IAExD,IAAG,CAACC,QAAQ,EAAE,OAAO,IAAI,CAACJ,aAAa;IAEvC,IAAIM,CAAC,GAAGF,QAAQ,CAACE,CAAC;IAClB,IAAIC,CAAC,GAAGH,QAAQ,CAACG,CAAC;IAElB,KAAI,MAAM,CAACC,GAAG,EAACC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACT,eAAe,CAAC,EAAC;MACrD,IAAI,CAACU,YAAY,CAACd,KAAK,EAACQ,CAAC,EAACC,CAAC,EAACE,KAAK,CAACI,EAAE,EAACJ,KAAK,CAACK,EAAE,EAACxB,WAAW,CAAC;IAC9D;IACAyB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,aAAa,CAAC;IAE/B,OAAO,IAAI,CAACA,aAAa;EAC7B;EAEQE,eAAeA,CAAA,EAAE;IACrB,OAAO;MACHe,IAAI,EAAC;QACDJ,EAAE,EAAC,CAAC,CAAC;QACLC,EAAE,EAAC;MACP,CAAC;MACDI,KAAK,EAAC;QACFL,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC;MACP,CAAC;MACDK,EAAE,EAAC;QACCN,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC,CAAC;MACR,CAAC;MACDM,IAAI,EAAC;QACDP,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC;MACP,CAAC;MACDO,MAAM,EAAC;QACHR,EAAE,EAAC,CAAC,CAAC;QACLC,EAAE,EAAC,CAAC;MACR,CAAC;MACDQ,OAAO,EAAC;QACJT,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC,CAAC;MACR,CAAC;MACDS,QAAQ,EAAC;QACLV,EAAE,EAAC,CAAC,CAAC;QACLC,EAAE,EAAC;MACP,CAAC;MACDU,SAAS,EAAC;QACNX,EAAE,EAAC,CAAC;QACJC,EAAE,EAAC;MACP;IACJ,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}