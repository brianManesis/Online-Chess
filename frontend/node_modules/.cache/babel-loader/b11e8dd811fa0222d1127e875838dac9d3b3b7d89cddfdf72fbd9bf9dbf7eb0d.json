{"ast":null,"code":"var _jsxFileName = \"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx\",\n  _s = $RefreshSig$();\nimport { PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { socket } from \"../lib/webSocket/socketConnection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GameplayPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  //const [socket, setSocket] = useState(socketConnection);\n  const [game, setGame] = useState({});\n  const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n  const [loaded, setLoaded] = useState(true);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    console.log(\"here\");\n  }, []);\n  // //useEffect(() => {\n  //     const createGame = (game:{host:boolean, hostColor:string, room:string})=>{\n  //         console.log(\"here\");\n  //         axios.post(API_URL+\"/api/game/create\",{host:game.room, hostColor:game.hostColor})\n  //         .then(res => {\n  //             socket.emit('createGame',{host:res.data.host, hostColor:res.data.hostColor});\n  //             setPlayerColor(res.data.hostColor);\n  //         })\n  //         .catch(err => {\n  //             navigate(\"/\");\n  //         });\n  //     }\n  //     const joinGame = (host:string)=>{\n  //         axios.post(API_URL+\"/api/game/join\",{host})\n  //         .then(res => {\n  //             socket.emit('joinGame', res.data.host);\n  //             setPlayerColor(res.data.color);\n  //             socket.emit('startGame');\n  //         })\n  //         .catch(err => {\n  //             navigate(\"/\");\n  //             alert(\"Lobby does not exist\")\n  //         });\n  //     }\n  //     const leaveGame = ()=>{\n  //         socket.emit(\"leaveGame\");\n  //         navigate(\"/\");\n  //     }\n\n  //     const gameString = localStorage.getItem('game');\n\n  //     if(!gameString) navigate('/');\n  //     else{\n  //         const game = JSON.parse(gameString);\n\n  //         if(game.host) createGame(game);\n  //         else joinGame(game.room);\n  //     }\n  // //}, []);\n\n  // useEffect(()=>{\n  //     socket.on('endGame', leaveGame);\n  //     socket.on(\"ready\", ()=> setLoaded(true));\n\n  //     return ()=> {\n  //         socket.off('endGame');\n  //         socket.off('ready');\n  //         socket.emit(\"leaveGame\");\n  //     }\n  // },[socket]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"gamePlayPage\",\n    children: loaded && /*#__PURE__*/_jsxDEV(Chessboard, {\n      socket: socket,\n      playerColor: playerColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(GameplayPage, \"AafTN89bk3amvEstlO5jZH+08YE=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = GameplayPage;\nvar _c;\n$RefreshReg$(_c, \"GameplayPage\");","map":{"version":3,"names":["PlayerColor","Chessboard","useEffect","useState","useNavigate","useSelector","socket","jsxDEV","_jsxDEV","GameplayPage","_s","navigate","user","state","auth","game","setGame","playerColor","setPlayerColor","WHITE","loaded","setLoaded","console","log","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx"],"sourcesContent":["import { API_URL,PlayerColor } from \"../utils/Constants\";\nimport Chessboard from \"../components/chess/game/board/Chessboard\";\nimport './GamePlayPage.css';\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport axios from \"axios\";\nimport { socket } from \"../lib/webSocket/socketConnection\";\n\nexport default function GameplayPage(){\n\n    const navigate = useNavigate();\n\n    const {user} = useSelector((state:any) => state.auth);\n    //const [socket, setSocket] = useState(socketConnection);\n    const [game, setGame] = useState({});\n    const [playerColor, setPlayerColor] = useState(PlayerColor.WHITE);\n    const [loaded, setLoaded] = useState(true);\n    useEffect(() =>{\n        if(!user){\n            navigate('/login')\n        }\n    },[user,navigate]);\n    useEffect(()=>{\n        console.log(\"here\")\n    },[]);\n    // //useEffect(() => {\n    //     const createGame = (game:{host:boolean, hostColor:string, room:string})=>{\n    //         console.log(\"here\");\n    //         axios.post(API_URL+\"/api/game/create\",{host:game.room, hostColor:game.hostColor})\n    //         .then(res => {\n    //             socket.emit('createGame',{host:res.data.host, hostColor:res.data.hostColor});\n    //             setPlayerColor(res.data.hostColor);\n    //         })\n    //         .catch(err => {\n    //             navigate(\"/\");\n    //         });\n    //     }\n    //     const joinGame = (host:string)=>{\n    //         axios.post(API_URL+\"/api/game/join\",{host})\n    //         .then(res => {\n    //             socket.emit('joinGame', res.data.host);\n    //             setPlayerColor(res.data.color);\n    //             socket.emit('startGame');\n    //         })\n    //         .catch(err => {\n    //             navigate(\"/\");\n    //             alert(\"Lobby does not exist\")\n    //         });\n    //     }\n    //     const leaveGame = ()=>{\n    //         socket.emit(\"leaveGame\");\n    //         navigate(\"/\");\n    //     }\n\n    //     const gameString = localStorage.getItem('game');\n\n    //     if(!gameString) navigate('/');\n    //     else{\n    //         const game = JSON.parse(gameString);\n\n    //         if(game.host) createGame(game);\n    //         else joinGame(game.room);\n    //     }\n    // //}, []);\n\n    // useEffect(()=>{\n    //     socket.on('endGame', leaveGame);\n    //     socket.on(\"ready\", ()=> setLoaded(true));\n        \n    //     return ()=> {\n    //         socket.off('endGame');\n    //         socket.off('ready');\n    //         socket.emit(\"leaveGame\");\n    //     }\n    // },[socket]);\n\n\n    return (\n        <div id=\"gamePlayPage\">\n            {loaded && <Chessboard socket={socket} playerColor={playerColor}></Chessboard>}\n        </div>\n    );\n}\n"],"mappings":";;AAAA,SAAiBA,WAAW,QAAQ,oBAAoB;AACxD,OAAOC,UAAU,MAAM,2CAA2C;AAClE,OAAO,oBAAoB;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAElC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM;IAACQ;EAAI,CAAC,GAAGP,WAAW,CAAEQ,KAAS,IAAKA,KAAK,CAACC,IAAI,CAAC;EACrD;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACH,WAAW,CAACmB,KAAK,CAAC;EACjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1CD,SAAS,CAAC,MAAK;IACX,IAAG,CAACU,IAAI,EAAC;MACLD,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAC,CAACC,IAAI,EAACD,QAAQ,CAAC,CAAC;EAClBT,SAAS,CAAC,MAAI;IACVoB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACvB,CAAC,EAAC,EAAE,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACIf,OAAA;IAAKgB,EAAE,EAAC,cAAc;IAAAC,QAAA,EACjBL,MAAM,iBAAIZ,OAAA,CAACP,UAAU;MAACK,MAAM,EAAEA,MAAO;MAACW,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEd;AAACnB,EAAA,CA1EuBD,YAAY;EAAA,QAEfL,WAAW,EAEbC,WAAW;AAAA;AAAAyB,EAAA,GAJNrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}