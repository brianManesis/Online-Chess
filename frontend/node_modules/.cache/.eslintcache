[{"/home/brian/Desktop/Projects/Chess/frontend/src/index.tsx":"1","/home/brian/Desktop/Projects/Chess/frontend/src/App.tsx":"2","/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx":"3","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx":"4","/home/brian/Desktop/Projects/Chess/frontend/src/model/ChessBoardModel.ts":"5","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Square.tsx":"6","/home/brian/Desktop/Projects/Chess/frontend/src/Constants.ts":"7","/home/brian/Desktop/Projects/Chess/frontend/src/model/PieceModel.ts":"8","/home/brian/Desktop/Projects/Chess/frontend/src/model/SquareModel.ts":"9","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/pieces/Piece.tsx":"10","/home/brian/Desktop/Projects/Chess/frontend/src/model/PossibleMoves.ts":"11"},{"size":274,"mtime":1686330156900,"results":"12","hashOfConfig":"13"},{"size":226,"mtime":1686330156900,"results":"14","hashOfConfig":"13"},{"size":264,"mtime":1686493539958,"results":"15","hashOfConfig":"13"},{"size":5865,"mtime":1686493544010,"results":"16","hashOfConfig":"13"},{"size":4188,"mtime":1686493537906,"results":"17","hashOfConfig":"13"},{"size":566,"mtime":1686330156900,"results":"18","hashOfConfig":"13"},{"size":354,"mtime":1686330156900,"results":"19","hashOfConfig":"13"},{"size":874,"mtime":1686493541118,"results":"20","hashOfConfig":"13"},{"size":603,"mtime":1686493541962,"results":"21","hashOfConfig":"13"},{"size":361,"mtime":1686330156900,"results":"22","hashOfConfig":"13"},{"size":906,"mtime":1686245677463,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ynes5g",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"/home/brian/Desktop/Projects/Chess/frontend/src/index.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/App.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx",["59","60","61"],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/ChessBoardModel.ts",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82"],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Square.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/Constants.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/PieceModel.ts",["83","84","85","86","87","88"],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/SquareModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/pieces/Piece.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/PossibleMoves.ts",["89","90"],[],"import { SquareModel } from \"./SquareModel\";\n\nexport function possiblePawnMoves(square:SquareModel, playerColor:string){\n    //need to add way of calculating possible moves depending on playerColor\n    let pawn = square.getPiece();\n    let pos = square.getPos();\n    const direction = pawn?.getColor() == playerColor? 1:-1;\n    const boundry = playerColor\n    let col = pos.charAt(0);\n    let row = parseInt(pos.charAt(1));\n    let possibleMoves:Set<string> = new Set();\n    console.log(col,row);\n    if(pawn && pawn.beenMoved && row < 8){\n        possibleMoves.add(col+(row+direction));\n    }\n    else if(pawn && !pawn.beenMoved && (row < 8)){\n        possibleMoves.add(col+(row+direction));\n        console.log(pawn && (!pawn.beenMoved) && (row < 8));\n        if(row+2 <= 8){\n            possibleMoves.add(col+(row+2*direction));\n        }\n    }\n    return possibleMoves;\n}",[],{"ruleId":"91","severity":1,"message":"92","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":21,"column":7,"nodeType":"97","endLine":21,"endColumn":19,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":61,"column":34,"nodeType":"101","messageId":"102","endLine":61,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":12,"column":31,"nodeType":"101","messageId":"102","endLine":12,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":15,"column":31,"nodeType":"101","messageId":"102","endLine":15,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":24,"column":41,"nodeType":"101","messageId":"102","endLine":24,"endColumn":43},{"ruleId":"99","severity":1,"message":"100","line":59,"column":16,"nodeType":"101","messageId":"102","endLine":59,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":62,"column":21,"nodeType":"101","messageId":"102","endLine":62,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":65,"column":21,"nodeType":"101","messageId":"102","endLine":65,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":66,"column":20,"nodeType":"101","messageId":"102","endLine":66,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":66,"column":34,"nodeType":"101","messageId":"102","endLine":66,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":69,"column":24,"nodeType":"101","messageId":"102","endLine":69,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":69,"column":38,"nodeType":"101","messageId":"102","endLine":69,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":72,"column":24,"nodeType":"101","messageId":"102","endLine":72,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":72,"column":38,"nodeType":"101","messageId":"102","endLine":72,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":75,"column":25,"nodeType":"101","messageId":"102","endLine":75,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":82,"column":21,"nodeType":"101","messageId":"102","endLine":82,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":83,"column":20,"nodeType":"101","messageId":"102","endLine":83,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":83,"column":34,"nodeType":"101","messageId":"102","endLine":83,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":86,"column":24,"nodeType":"101","messageId":"102","endLine":86,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":86,"column":38,"nodeType":"101","messageId":"102","endLine":86,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":89,"column":24,"nodeType":"101","messageId":"102","endLine":89,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":89,"column":38,"nodeType":"101","messageId":"102","endLine":89,"endColumn":40},{"ruleId":"99","severity":1,"message":"100","line":92,"column":25,"nodeType":"101","messageId":"102","endLine":92,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":23,"column":22,"nodeType":"101","messageId":"102","endLine":23,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":25,"column":28,"nodeType":"101","messageId":"102","endLine":25,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":27,"column":28,"nodeType":"101","messageId":"102","endLine":27,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":29,"column":28,"nodeType":"101","messageId":"102","endLine":29,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":31,"column":28,"nodeType":"101","messageId":"102","endLine":31,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":33,"column":28,"nodeType":"101","messageId":"102","endLine":33,"endColumn":30},{"ruleId":"99","severity":1,"message":"100","line":7,"column":40,"nodeType":"101","messageId":"102","endLine":7,"endColumn":42},{"ruleId":"91","severity":1,"message":"103","line":8,"column":11,"nodeType":"93","messageId":"94","endLine":8,"endColumn":18},"@typescript-eslint/no-unused-vars","'possiblePawnMoves' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boardView' and 'makeChessBoard'. Either include them or remove the dependency array.","ArrayExpression",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'boundry' is assigned a value but never used.",{"desc":"105","fix":"106"},"Update the dependencies array to be: [boardModel, boardView, makeChessBoard]",{"range":"107","text":"108"},[918,930],"[boardModel, boardView, makeChessBoard]"]