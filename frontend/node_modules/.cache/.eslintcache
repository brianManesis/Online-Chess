[{"/home/brian/Desktop/Projects/Chess/frontend/src/index.tsx":"1","/home/brian/Desktop/Projects/Chess/frontend/src/App.tsx":"2","/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx":"3","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx":"4","/home/brian/Desktop/Projects/Chess/frontend/src/model/ChessBoardModel.ts":"5","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Square.tsx":"6","/home/brian/Desktop/Projects/Chess/frontend/src/model/SquareModel.ts":"7","/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/pieces/Piece.tsx":"8","/home/brian/Desktop/Projects/Chess/frontend/src/utils/Constants.ts":"9","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/QueenModel.ts":"10","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/KingModel.ts":"11","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/RookModel.ts":"12","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/KnightModel.ts":"13","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/PawnModel.ts":"14","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/BishopModel.ts":"15","/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/PieceModel.ts":"16","/home/brian/Desktop/Projects/Chess/frontend/src/model/GameModel.ts":"17","/home/brian/Desktop/Projects/Chess/frontend/src/store.ts":"18","/home/brian/Desktop/Projects/Chess/frontend/src/pages/Login.tsx":"19","/home/brian/Desktop/Projects/Chess/frontend/src/pages/Register.tsx":"20","/home/brian/Desktop/Projects/Chess/frontend/src/pages/Dashboard.tsx":"21","/home/brian/Desktop/Projects/Chess/frontend/src/components/common/Header.tsx":"22","/home/brian/Desktop/Projects/Chess/frontend/src/lib/webSocket/socketConnection.ts":"23","/home/brian/Desktop/Projects/Chess/frontend/src/lib/auth/authSlice.ts":"24","/home/brian/Desktop/Projects/Chess/frontend/src/lib/auth/authService.ts":"25","/home/brian/Desktop/Projects/Chess/frontend/src/components/common/Spinner.tsx":"26"},{"size":394,"mtime":1690218419516,"results":"27","hashOfConfig":"28"},{"size":820,"mtime":1690717758569,"results":"29","hashOfConfig":"28"},{"size":1010,"mtime":1690473911584,"results":"30","hashOfConfig":"28"},{"size":6531,"mtime":1690216946146,"results":"31","hashOfConfig":"28"},{"size":19278,"mtime":1689352289932,"results":"32","hashOfConfig":"28"},{"size":566,"mtime":1687348201688,"results":"33","hashOfConfig":"28"},{"size":610,"mtime":1689352221664,"results":"34","hashOfConfig":"28"},{"size":368,"mtime":1687348201692,"results":"35","hashOfConfig":"28"},{"size":2720,"mtime":1690299199869,"results":"36","hashOfConfig":"28"},{"size":2116,"mtime":1689352244332,"results":"37","hashOfConfig":"28"},{"size":3526,"mtime":1689352269272,"results":"38","hashOfConfig":"28"},{"size":1718,"mtime":1689352235260,"results":"39","hashOfConfig":"28"},{"size":1981,"mtime":1689352261976,"results":"40","hashOfConfig":"28"},{"size":4173,"mtime":1689352250996,"results":"41","hashOfConfig":"28"},{"size":1805,"mtime":1689352275568,"results":"42","hashOfConfig":"28"},{"size":2133,"mtime":1689352229104,"results":"43","hashOfConfig":"28"},{"size":751,"mtime":1688053758147,"results":"44","hashOfConfig":"28"},{"size":187,"mtime":1690297106928,"results":"45","hashOfConfig":"28"},{"size":2683,"mtime":1690391963750,"results":"46","hashOfConfig":"28"},{"size":3774,"mtime":1690391349241,"results":"47","hashOfConfig":"28"},{"size":575,"mtime":1690904475587,"results":"48","hashOfConfig":"28"},{"size":1381,"mtime":1690390379249,"results":"49","hashOfConfig":"28"},{"size":87,"mtime":1689698100537,"results":"50","hashOfConfig":"28"},{"size":2791,"mtime":1690559552109,"results":"51","hashOfConfig":"28"},{"size":673,"mtime":1690390750852,"results":"52","hashOfConfig":"28"},{"size":171,"mtime":1690388067239,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"ynes5g",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/brian/Desktop/Projects/Chess/frontend/src/index.tsx",[],[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/App.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/pages/GameplayPage.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Chessboard.tsx",["135","136"],[],"import './Chessboard.css';\nimport Square from './Square';\nimport { ChessBoardModel } from '../../../../model/ChessBoardModel';\nimport { useEffect, useRef, useState } from 'react';\nimport { BOARD_SIZE, PlayerColor } from '../../../../utils/Constants';\nimport React from 'react';\nimport { SquareModel } from '../../../../model/SquareModel';\nimport  { socket }  from \"../../../../lib/webSocket/socketConnection\";\n\nexport default function Chessboard(props:{playerColor:PlayerColor}){\n    const playerColor = props.playerColor;\n    const boardViewRef = useRef<HTMLDivElement>(null);\n    const [activePiece, setActivePiece] = useState< HTMLElement | null>(null);\n    const [boardModel,setBoardModel] = useState(new ChessBoardModel());\n    const [boardView, setBoardView] = useState([[],[],[],[],[],[],[],[]]);\n\n    useEffect(()=>{\n        const handleMove = (move:{start:string,end:string}) =>{\n            makeMove(move.start,move.end);\n        }\n        socket.on('connecton', (socket)=>{console.log(socket.id)});\n        socket.on('move', handleMove);\n\n        return () => {\n            socket.off('connecton');\n            socket.off('move', handleMove);\n          };\n     },[boardModel]);\n\n        \n    useEffect(()=>{\n        makeChessBoard();\n    },[boardModel]);\n    \n    function makeChessBoard(){\n        const boardViewTemp:any = [[],[],[],[],[],[],[],[]];\n        const currentBoardModel:Array<Array<SquareModel>> = boardModel.getChessBoard();\n        if(playerColor === PlayerColor.WHITE){\n            for(let i = 0; i<BOARD_SIZE; i++){\n                for(let j = 0; j<BOARD_SIZE; j++){\n                    boardViewTemp[i].push(\n                        <Square key={i+\"\"+j} squareModel={currentBoardModel[i][j]}></Square>\n                    );\n                }\n            }\n        }\n        else{\n            for(let i = BOARD_SIZE-1; i>=0; i--){\n                let k = 0;\n                for(let j = BOARD_SIZE-1; j>=0; j--){\n                    boardViewTemp[k].push(\n                        <Square key={i+\"\"+j} squareModel={currentBoardModel[i][j]}></Square>\n                    );\n                }\n                k++;\n            }\n        }\n        setBoardView(() => boardViewTemp);\n    }\n    \n    function handleClick(event: React.MouseEvent){\n        if(activePiece){\n            movePiece(event);\n        }\n        else{\n            selectPiece(event);\n        }\n    }\n    function selectPiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        const currentBoard = boardViewRef.current;\n        if(element.classList.contains(\"piece\") && currentBoard && !activePiece){\n            setActivePiece(element); \n        }       \n    }\n    function movePiece(event: React.MouseEvent){\n        const element = event.target as HTMLElement;\n        if(activePiece && boardViewRef.current){\n            let startSquare = activePiece.parentElement;\n            let endSquare: HTMLElement | null = element;\n            let activePieceColor:PlayerColor = activePiece.id.includes(\"White\")?\n                PlayerColor.WHITE:PlayerColor.BLACK;\n\n            if(endSquare.classList.contains(\"piece\")){\n                let endPieceColor = endSquare.id.includes(\"White\")?\n                PlayerColor.WHITE:PlayerColor.BLACK;\n\n                if(endPieceColor === activePieceColor){\n                    setActivePiece(endSquare);\n                    return;\n                }\n                endSquare = endSquare.parentElement;\n            }\n\n\n            if(startSquare && endSquare){\n                makeMove(startSquare.id,endSquare.id);       \n                socket.emit(\"move\", {start:startSquare.id,end:endSquare.id});\n            }\n            setActivePiece(null);\n        }\n    }\n    function makeMove(start:string,end:string){\n        const updatedBoardModel = boardModel.clone();\n        updatedBoardModel.move(\n            start,\n            end\n        );        \n\n        setBoardModel(updatedBoardModel);\n    }\n    // function grabPiece(event: React.MouseEvent){\n    //     const element = event.target as HTMLElement;\n    //     const currentBoard = boardViewRef.current;\n    //     setGrabPiecePos(element.parentElement?.id+\"\");\n    //     console.log(element.parentElement?.id);\n    //     if(element.classList.contains(\"piece\") && currentBoard){\n    //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n    //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientWidth;\n    //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n    //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n    //         element.style.position = \"absolute\";\n    //         element.style.left = `${x}px`;\n    //         element.style.top = `${y}px`;\n    //         setActivePiece(element);\n    //     }\n    // }\n    \n    // function movePiece(event: React.MouseEvent){\n    //     if(activePiece && boardViewRef.current){\n    //         const BOARD_VIEW_HEIGHT = boardViewRef.current.clientHeight;\n    //         const BOARD_VIEW_WIDTH = boardViewRef.current.clientHeight;\n    //         const minX = boardViewRef.current.offsetLeft;\n    //         const minY = boardViewRef.current.offsetTop;\n    //         const maxX = boardViewRef.current.offsetLeft + ((8/9)*BOARD_VIEW_WIDTH);\n    //         const maxY = boardViewRef.current.offsetTop + ((8/9)*BOARD_VIEW_HEIGHT);\n\n    //         const x = event.clientX-(BOARD_VIEW_WIDTH/16);\n    //         const y = event.clientY-(BOARD_VIEW_HEIGHT/16);\n\n    //         if (x < minX) {\n    //             activePiece.style.left = `${minX}px`;\n    //         }\n    //         else if (x > maxX) {\n    //             activePiece.style.left = `${maxX}px`;\n    //         }\n    //         else {\n    //             activePiece.style.left = `${x}px`;\n    //         }\n    \n    //         if (y < minY) {\n    //             activePiece.style.top = `${minY}px`;\n    //         }\n    //         else if (y > maxY) {\n    //             activePiece.style.top = `${maxY}px`;\n    //         }\n    //         else {\n    //             activePiece.style.top = `${y}px`;\n    //         }\n    //     }\n    // }\n    \n    // function dropPiece(event: React.MouseEvent){\n    //     const element = event.target as HTMLElement;\n    //     console.log(event);\n    //     if(activePiece && boardViewRef.current){\n    //         setActivePiece(null);\n    //     }\n    // }\n    return(\n        <div id = \"chessboard\"\n        onClick={event=>handleClick(event)}\n        ref={boardViewRef}>\n            {boardView}\n        </div>\n    );\n}","/home/brian/Desktop/Projects/Chess/frontend/src/model/ChessBoardModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/board/Square.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/SquareModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/chess/game/pieces/Piece.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/utils/Constants.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/QueenModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/KingModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/RookModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/KnightModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/PawnModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/BishopModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/pieces/PieceModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/model/GameModel.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/store.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/pages/Login.tsx",[],[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/pages/Register.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/pages/Dashboard.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/common/Header.tsx",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/lib/webSocket/socketConnection.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/lib/auth/authSlice.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/lib/auth/authService.ts",[],[],"/home/brian/Desktop/Projects/Chess/frontend/src/components/common/Spinner.tsx",[],[],{"ruleId":"137","severity":1,"message":"138","line":28,"column":8,"nodeType":"139","endLine":28,"endColumn":20,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":33,"column":7,"nodeType":"139","endLine":33,"endColumn":19,"suggestions":"142"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeMove'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'makeChessBoard'. Either include it or remove the dependency array.",["144"],{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [boardModel, makeMove]",{"range":"149","text":"150"},"Update the dependencies array to be: [boardModel, makeChessBoard]",{"range":"151","text":"152"},[1174,1186],"[boardModel, makeMove]",[1251,1263],"[boardModel, makeChessBoard]"]